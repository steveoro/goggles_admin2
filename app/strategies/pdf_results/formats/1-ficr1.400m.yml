#
# = Layout format definition for PdfResults::FormatParser
#
# 400m correctly aligned, with all lap timings (step 50m) and optional team name extension row
#
1-ficr1.400m:
  - name: header
    # Index is page-relative:
    at_fixed_row: 0
    # Repeat (at_fixed_row, each page)
    repeat: true
    rows:
      # "header" row #0
      - fields:
        - name: edition
          required: false
          format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
          pop_out: false
        - name: meeting_name
          format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
          pop_out: false

      # "header" row #1
      - fields:
        - name: meeting_place
          lambda: strip
          # Support long place names like "Centro Federale di Ostia" or "Reggio nell'Emilia"
          format: "\\s*((\\w{1,}['\\s]?)+),\\s*"
        - name: meeting_date
          lambda: strip
          # Support month names too: dd(-/)mm(-/)yy(yy), dd MMM(...) yy(yy)
          format: "\\s*(\\d{2}([-\/]\\d{2}[-\/]\\d{2,4}|\\s\\w{3,}\\s\\d{2,4}))\\b"

      # Optional empty row #3
      - name: hdr_separator
        required: false
        format: "^$"

  - name: event
    # Repeat (at_fixed_row, each page)
    repeat: true
    parent: header
    rows:
      # "event" row-0, absolute row #2:
      - fields:
        - name: event_length
          lambda: strip
          format: "\\s*(\\d{2,4})m?\\s+"
        - name: event_type
          lambda: strip
          format: "\\s*(?>m\\s)?((\\w+\\s?){1,2})\\sMaster\\sMisti\\b"

      # event" row-1, absolute row #3:
      - fields:
        - name: event_sub_hdr
          lambda: strip
          format: "Riepilogo|Serie\\s\\d{2}"

  # Data columns header
  - name: results_hdr
    repeat: true
    rows:
      - name: results_hdr1
        format: "\\s?Pos.\\s+Nominativo\\s+Crs\\s+Naz\\s+50 m\\s+100 m(?>\\s+150 m)?(?>\\s+200 m)?(\\s+250 m)?(\\s+300 m)?(\\s+350 m)?(\\s+400 m)?\\s+Arrivo\\s+Pt\\s+Cat"
      - name: results_hdr2
        format: "\\s?SocietÃ \\s+Anno\\s+FINA\\s+Pt\\s+S.C."

  # Optional row before category
  - name: cat_spacer
    parent: results_hdr
    required: false
    format: "^$"

  - name: category
    repeat: true
    parent: event
    rows:
      # Another optional empty row (in older files)
      - name: cat_spacer2
        required: false
        format: "^$"

      - name: cat_title
        format: "\\s*([UAM]\\d{2}\\s(Under|Master)\\s(Femmine|Maschi)(\\s(\\d{2}\\s-\\s\\d{2}))?)[\\b\\n]?"
      # Optional empty row
      - name: cat_separator1
        required: false
        format: "^$"

  - name: results
    repeat: true
    parent: category
    rows:
      - name: results1
        fields:
          - name: rank
            format: "^\\s?(\\d{1,2}|SQ|RT|NP)\\s+"
            pop_out: false
          - name: swimmer_name
            format: "\\s+(\\D+(['`\\-\\.\\s]\\s?\\D+){1,4})\\s+"
            pop_out: false
            token_end: 31
          - name: lane_num
            format: "\\s*(\\d{1,2})\\s*"
            pop_out: false
            # Column alignment may vary (swimmer_name range can overlap safely with this due to its format):
            token_start: 29
            token_end: 52
          - name: nation
            format: "\\s*(\\w{2,3})\\s*"
            pop_out: false
            token_start: 53
            token_end: 62

          - name: lap50
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 70
            token_end: 83
            required: false
          - name: lap100
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 82
            token_end: 96
            required: false
          - name: lap150
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 95
            token_end: 110
            required: false
          - name: lap200
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 109
            token_end: 123
            required: false

          - name: lap250
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 122
            token_end: 133
            required: false
          - name: lap300
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 132
            token_end: 143
            required: false
          - name: lap350
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 142
            token_end: 153
            required: false
          - name: lap400
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 152
            token_end: 162
            required: false

          - name: timing
            format: "\\s*(\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\s*"
            token_start: 162
            pop_out: false
            required: false

      - name: results2
        fields:
          - name: team_name
            format: "^\\s{3,8}(([\\w\\d\\-&%'`]+.\\s?)+)"
            token_end: 43
            pop_out: false
          - name: year_of_birth
            format: "\\s*(\\d{4})\\s*"
            pop_out: false
            token_start: 51
            token_end: 64

          - name: delta100
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 83
            token_end: 96
            required: false
          - name: delta150
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 96
            token_end: 110
            required: false
          - name: delta200
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 110
            token_end: 123
            required: false

          - name: delta250
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 123
            token_end: 133
            required: false
          - name: delta300
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 133
            token_end: 144
            required: false
          - name: delta350
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 143
            token_end: 153
            required: false
          - name: delta400
            format: "\\s*\\((\\d{1,2}?[':.]?\\d{1,2}[\":.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 152
            token_end: 163
            required: false

          - name: std_score
            format: "\\s*(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})\\b"
            token_start: 162
            pop_out: false
            # U25 / A20 do not score:
            required: false

      - name: results3
        # This will match any empty row if the fields are not found:
        optional_if_empty: true
        # This will make the row not to fail if missing at all
        # => row #3 can be there, or be empty (no fields at all), or have either 1 or 2 matching fields
        required: false
        fields:
          - name: team_suffix
            format: "^\\s{3,8}(([\\w]+\\s?)+)"
            token_end: 43
            pop_out: false
            required: false
          - name: disqualify_type
            format: "^(?!\\s+(Orario Ufficializzazione|\\d{1,2}|www.ficr.it|corsie|Pagina))\\s+(\\D+\\s?)+\\b"
            token_start: 115
            required: false

  - name: disqualified
    parent: results
    required: false
    lambda: strip
    format: "\\s*Non Classificati\\b"

  - name: empty_row
    parent: event
    required: false
    format: "^$"

  - name: publish_time
    parent: event
    required: false
    lambda: strip
    format: "Orario Ufficializzazione"

  # End-Of-Page context
  - name: footer
    # Choose a link with the wrapping parent context from which the scan may resume
    # when after this, independently from check success or failure:
    parent: event
    # The 'eop' key implies that this context will be searched <row_span> lines before the end of page.
    # This also implies that the file must also be parsed in pages, otherwise the recognition will fail.
    # (DO NOT use eop: true when extracting the whole file, unless when processing batches of pages)
    eop: true
    row_span: 6
    repeat: true
    starts_with: Elaborazione dati a cura della Federazione Italiana Cronometristi -
    fields:
      - name: pool_type
        format: "\\s*www.ficr.it\\s+(\\d{1,2} corsie \\d{2}m)\\s+Pagina\\s*"
      # Actual last-line context marker
      - name: page_delimiter
        format: "\\s*Risultati su https://nuoto.ficr.it\\b"
