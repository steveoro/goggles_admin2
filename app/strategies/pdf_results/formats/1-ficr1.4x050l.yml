#
# = Layout format definition for PdfResults::FormatParser
#
# Copy of 1-ficr2.4x050m: no swimmer names, lap rows "mis-aligned", 5x rows per each relay result
# (similar to 4x100l, but with all 50m lap timings)
#
1-ficr1.4x050l:
  - name: header
    at_fixed_row: 0
    # Repeat each page:
    repeat: true
    rows:
      # "header" row-0, abs. row #0
      - fields:
        - name: edition
          required: false
          format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+)\\D?\\D?\\s+"
          pop_out: false
        - name: meeting_name
          format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?\\D?\\D?\\s+(.+)$"
          pop_out: false

      # "header" row-1, abs. row #1:
      - fields:
        - name: meeting_date
          # Extract the date first, popping it out so that the remainder can be treated as the meeting place:
          format: "[,;\\/\\s](?>\\d{1,2}\\s?(?>-|\\.\\.)\\s?)?(\\d{2}[\\/\\-\\s](?>\\d{2}|\\w{3,})[\\/\\-\\s](?>\\d{4}|\\d{2}))"
          # pop_out: false
        - name: meeting_place
          # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
          # More generic: (see ficr2)
          format: "^\\s*(\\D{2,}),\\s*"

  - name: sub_title
    at_fixed_row: 2
    required: false
    parent: header
    rows:
      # Optional empty row
      - name: sub_separator1
        required: false
        format: "^$"
      - name: sub_title1
        format: "\\s+(Risultati)"

  - name: event
    starts_at_row: 2
    ends_at_row: 6
    repeat: true
    parent: header
    rows:
      - fields:
        - name: event_length
          lambda: strip
          format: "\\s*([468]X\\d{2,4})m?\\s+"
        - name: event_type
          lambda: strip
          format: "\\s*(?>m\\s)?((\\w+\\s?){1,2})\\sMaster\\s(Misti|Femmin|Maschi)"
        - name: gender_type
          lambda: strip
          format: "\\sMaster\\s(Misti|Femmin|Maschi)"

      - name: event_sub_hdr
        lambda: strip
        format: "Riepilogo|Serie\\s\\d{2}"

  # Data columns header
  - name: results_hdr
    starts_at_row: 4
    ends_at_row: 7
    repeat: true
    rows:
      - name: results_hdr1
        format: "\\s?Pos.\\s+Nominativo\\s+Crs\\.?\\s+Naz\\.?\\s+50 m\\s+100 m\\s+150 m\\s+200 m(\\s+300 m)?(\\s+400 m)?\\s+Arrivo\\s+Pti?\\s+Cat"
      - name: results_hdr2
        format: "\\s?Società\\s+Anno\\s{40,}(FINA|Master)\\s+Pti?\\s+S\\.?C\\.?"
      # Optional 2x empty rows
      - name: results_hdr_sep1
        format: "^$"
        required: false
      - name: results_hdr_sep2
        format: "^$"
        required: false

  - name: rel_category
    starts_at_row: 6
    repeat: true
    # This will match any empty row if the fields are not found:
    optional_if_empty: true
    parent: event
    rows:
      - name: cat_title
        # Original:
        # format: "\\s+((?>Under|Master)\\s(?>Misti|Femmin\\w*|Masch\\w*)(?>\\s(?>\\d{2,3}\\s[-–]\\s\\d{2,3}))?)[\\b\\n]?"
        # More versatile:
        # (Examples: "M 200 - 239 Master Misti", "M200-239 Master Femmine", "Master Maschi M 200", "M200 Femminili", ...)
        format: "\\b(?>(?>M(?>aster)?|A(?>ssoluti)?|U(?>nder)?)\\s?)?(?>(?>Misti|Femmin\\w*|Masch\\w*)?\\s)?(\\d{2,3}\\s?-\\s?\\d{2,3}|[MAU]\\s?\\d{2,3}(?>\\s?-\\s?\\d{2,3})?)(?>(?>M(?>aster)?|A(?>ssoluti)?|U(?>nder)?)\\s)?(?>Misti|Femmin\\w*|Masch\\w*)?\\b"
      # Optional empty row
      - name: cat_separator1
        format: "^$"
        required: false

  - name: rel_team
    repeat: true
    parent: rel_category
    starts_at_row: 7
    rows:
      - name: rel_team0
        # DSQ results usually won't have the lap row with the timings:
        required: false
        fields:
          # - name: spacer
          #   format: "^\\s{64,}(?!\\s*\\D+)"
          #   pop_out: false
          - name: lap50
            format: "\\s{50,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 66
            # token_end: 78
            required: false
          - name: lap100
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){1}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 80
            # token_end: 92
            required: false
          - name: lap150
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){2}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 92
            # token_end: 103
            required: false
          - name: lap200
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){3}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 103
            # token_end: 113
            required: false

          - name: timing
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})$"
            # Use last lap as timing when the column is totally missing:
            token_start: 103
            pop_out: false
            required: false

      - name: rel_team1
        fields:
          - name: rank
            format: "^\\s*(\\d{1,2}|SQ|RT|NP|ES)\\s+"
            pop_out: false
            # "Out of race" won't have a final ranking:
            required: false
          # This is usually the relay name, but for some events it's the only place where the name is printed out:
          - name: team_name
            format: "(?>\\s+\\d{1,2}|SQ|RT|NP|ES)?\\s+(.{3,35})"
            token_end: 43
            pop_out: false
          - name: lane_num
            format: "\\s*(\\d{1,2})\\s*"
            pop_out: false
            token_start: 27
            token_end: 55
          - name: nation
            format: "\\s*(\\w{2,3})\\s*"
            pop_out: false
            token_start: 53
            token_end: 62
            required: false

      - name: rel_team2
        # This will match any empty row if the fields are not found:
        optional_if_empty: true
        # ""RT" or "Retired" result rows usually won't even have the disqualify row (but at least should have an empty row instead):
        required: false
        fields:
          # - name: spacer
          #   format: "\\s{78,}"
          #   pop_out: false
          - name: delta100
            # may/may not have brackets:
            format: "\\s{70,}\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            # token_start: 80
            # token_end: 92
            required: false
          - name: delta150
            format: "\\s{70,}(?>\\(?(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\)?\\s+){1}\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            # token_start: 92
            # token_end: 102
            required: false
          - name: delta200
            format: "\\s{70,}(?>\\(?(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\)?\\s+){2}\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*\\(?((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)?\\s*"
            # token_start: 102
            # token_end: 111
            required: false

          - name: disqualify_type
            format: "^(?!\\s+(Orario Ufficializzazione|\\d{1,2}|www.ficr.it|corsie|Pagina))\\s+(\\D+\\s?)+\\b"
            token_start: 134
            required: false

      - name: rel_team3
        fields:
          # May (rightfully) overwrite the team name in rel_team1 when present (LIFO precedence):
          - name: team_name
            format: "^\\s{2,15}(.{3,35})"
            token_end: 43
            required: false
            pop_out: false
          # Ignore zero overall years (printed out here instead of swimmer's YOB):
          - name: team_overall_age
            format: "^\\s{40,}\\d{1,}$"
            required: false
            pop_out: false

      - name: rel_team4
        # Don't make the row fail when not found:
        required: false
        fields:
          - name: std_score
            format: "^\\s{110,}(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})\\s?"
            pop_out: false
            # U25 / A20 do not score:
            required: false
          - name: meeting_score
            format: "^\\s{110,}(?>\\d?[,.]?\\d{1,4}[,.]\\d{1,2})?\\s{10,}(\\d+)\\b"
            pop_out: false
            # U25 / A20 do not score:
            required: false

  # Optional row including the "disqualified" message/reason
  # (When this is present, usually no relay swimmer rows are added)
  - name: rel_dsq
    required: false
    parent: rel_team
    fields:
      - name: disqualify_type
        # "All non-digit words from column 120 onward until the end of line"
        format: "^(?!\\s+(Orario Ufficializzazione|\\d{1,2}|www.ficr.it|corsie|Pagina))\\s{120,}(\\D+\\s?)+\\b"

  - name: rel_swimmer
    repeat: true
    parent: rel_team
    starts_at_row: 8
    # When the team is disqualified usually no swimmer rows are added:
    required: false
    rows:
      - name: rel_swimmer1
        fields:
          - name: swimmer_name
            format: "\\s+(\\D+(?>['`\\-\\.\\s]\\s?\\D+){1,4})\\s+"
            pop_out: false
            token_end: 31
          - name: nation
            format: "\\s+(\\w{2,3})\\s*"
            pop_out: false
            token_start: 31
            token_end: 68

          - name: lap50
            format: "\\s{50,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 70
            # token_end: 82
            required: false
          - name: lap100
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){1}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 82
            # token_end: 94
            required: false
          - name: lap150
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){2}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 95
            # token_end: 108
            required: false
          - name: lap200
            format: "\\s{50,}(?>(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s+){3}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            # Positional:
            # format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            # token_start: 109
            # token_end: 118
            required: false

      - name: rel_swimmer2
        fields:
          - name: year_of_birth
            format: "\\s{54,}(\\d{4})\\s*"
            pop_out: false
            token_end: 70

          - name: delta100
            format: "\\s*\\(((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 83
            required: false

      - name: rel_separator
        required: false
        format: "^$"

  # Ignored header (DSQ label is stored under rel_team)
  - name: disqualified
    parent: rel_category
    required: false
    lambda: strip
    format: "\\s*(Non Classificati|Fuori Gara)\\b"

  - name: empty_row
    parent: event
    required: false
    format: "^$"

  - name: publish_time
    parent: event
    required: false
    lambda: strip
    format: "Orario Ufficializzazione"

  - name: footer_title
    parent: event
    repeat: true
    rows:
      - name: pre_footer_spacer1
        required: false
        format: "^$"
      - name: page_count
        starts_with: Elaborazione dati a cura della Federazione Italiana Cronometristi - www.ficr.it
        fields:
          - name: pool_type
            required: false
            format: "\\s+(\\d{1,2} corsie \\d{2}m)\\s+"
          - name: page_num
            format: "\\s+Pagina\\s(\\d{1,2})\\sdi\\s\\d{1,2}"

  # End-Of-Page context
  - name: footer
    parent: footer_title
    eop: true
    row_span: 4
    repeat: true
    fields:
      # Actual last-line context marker (page should end after this token)
      - name: page_delimiter
        format: "nuoto.ficr.it\\b"
