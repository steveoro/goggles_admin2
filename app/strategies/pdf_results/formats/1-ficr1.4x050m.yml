#
# = Layout format definition for PdfResults::FormatParser
#
# Copy of 1-ficr2.4x050m: 2 rows x team name + 2 rows for each relay swimmer, x each relay result
#
1-ficr1.4x050m:
  - name: header
    at_fixed_row: 0
    # Repeat each page:
    repeat: true
    rows:
      # "header" row-0, abs. row #0
      - fields:
        - name: edition
          required: false
          format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
          pop_out: false
        - name: meeting_name
          format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
          pop_out: false

      # "header" row-1, abs. row #1:
      - fields:
        - name: meeting_place
          # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
          # format: "^\\s*(.{2,}(?>\\s\\(\\w\\w\\)))?,\\s*"
          # More generic: (see ficr2)
          format: "^\\s*(\\D{2,}),\\s*"
        - name: meeting_date
          # Support month names too: dd(-/)mm(-/)yy(yy), dd MMM(...) yy(yy)
          format: "^\\s*.{2,}(?>\\s\\(\\w\\w\\))?,\\s*(\\d{2}([-\/]\\d{2}[-\/]\\d{2,4}|\\s\\w{3,}\\s\\d{2,4}))\\b"

  - name: event
    starts_at_row: 2
    repeat: true
    parent: header
    rows:
      - fields:
        - name: event_length
          lambda: strip
          format: "\\s*([468]X\\d{2,4})m?\\s+"
        - name: event_type
          lambda: strip
          format: "\\s*(?>m\\s)?((\\w+\\s?){1,2})\\sMaster\\s(Misti|Femmin|Maschi)"
        - name: gender_type
          lambda: strip
          format: "\\sMaster\\s(Misti|Femmin|Maschi)"

      - name: event_sub_hdr
        lambda: strip
        format: "Riepilogo|Serie\\s\\d{2}"

  # Data columns header
  - name: results_hdr
    starts_at_row: 4
    ends_at_row: 7
    repeat: true
    rows:
      - name: results_hdr1
        format: "\\s?Pos.\\s+Nominativo\\s+Crs\\s+Naz\\s+50 m\\s+100 m\\s+150 m\\s+200 m(\\s+250 m)?(\\s+300 m)?(\\s+350 m)?(\\s+400 m)?\\s+Arrivo\\s+Pti?\\s+Cat"
      - name: results_hdr2
        format: "\\s?Società\\s+Anno\\s{40,}(FINA|Master)\\s+Pti?\\s+S\\.?C\\.?"

  - name: rel_category
    starts_at_row: 6
    repeat: true
    # This will match any empty row if the fields are not found:
    optional_if_empty: true
    parent: event
    rows:
      - name: cat_title
        # Original:
        # format: "\\s+((?>Under|Master)\\s(?>Misti|Femmin\\w*|Masch\\w*)(?>\\s(?>\\d{2,3}\\s[-–]\\s\\d{2,3}))?)[\\b\\n]?"
        # More versatile:
        # (Examples: "M 200 - 239 Master Misti", "M200-239 Master Femmine", "Master Maschi M 200", "M200 Femminili", ...)
        format: "\\b(?>(?>M(?>aster)?|A(?>ssoluti)?|U(?>nder)?)\\s?)?(?>(?>Misti|Femmin\\w*|Masch\\w*)?\\s)?(\\d{2,3}\\s?-\\s?\\d{2,3}|[MAU]\\s?\\d{2,3}(?>\\s?-\\s?\\d{2,3})?)(?>(?>M(?>aster)?|A(?>ssoluti)?|U(?>nder)?)\\s)?(?>Misti|Femmin\\w*|Masch\\w*)?\\b"

  - name: rel_team
    repeat: true
    parent: rel_category
    starts_at_row: 7
    rows:
      - name: rel_team1
        fields:
          - name: rank
            format: "^\\s*(\\d{1,2}|SQ|RT|NP|ES)\\s+"
            pop_out: false
            # "Out of race" won't have a final ranking:
            required: false
          - name: team_name
            format: "\\s+(([\\w\\d\\-&%'`]+.\\s?)+)"
            token_start: 2
            token_end: 32
            pop_out: false
          - name: lane_num
            format: "\\s*(\\d{1,2})\\s*"
            pop_out: false
            # Column alignment may vary (swimmer_name range can overlap safely with this due to its format):
            token_start: 28
            token_end: 52
          - name: nation
            format: "\\s*(\\w{2,3})\\s*"
            pop_out: false
            token_start: 52
            token_end: 66
          - name: lap50
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 68
            token_end: 81
            required: false
          - name: lap100
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 81
            token_end: 94
            required: false
          - name: lap150
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 93
            token_end: 107
            required: false
          - name: lap200
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 107
            token_end: 121
            required: false

          - name: timing
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})$"
            # Use last lap as timing when the column is totally missing:
            token_start: 107
            pop_out: false
            required: false

      - name: rel_team2
        fields:
          - name: team_name
            format: "^\\s{3,8}(([\\w\\d\\-&%'`]+.\\s?)+)"
            token_end: 43
            pop_out: false
          - name: delta100
            format: "\\s*\\(((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 82
            token_end: 95
            required: false
          - name: delta150
            format: "\\s*\\(((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 92
            token_end: 107
            required: false
          - name: delta200
            format: "\\s*\\(((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 107
            token_end: 121
            required: false
          - name: std_score
            format: "\\s*(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})"
            token_start: 120
            pop_out: false
            # Most of the times, only the 1st relay of a team will score (the others won't count for the rankings):
            required: false

      - name: rel_team3
        # This will match any empty row if the fields are not found:
        optional_if_empty: true
        # This will make the row not to fail if missing at all
        # => row #3 can be there, or be empty (no fields at all), or have either 1 or 2 matching fields
        required: false
        fields:
          - name: team_suffix
            format: "^\\s{3,8}([\\w\\d\\s]{1,34})$"
            pop_out: false
            required: false

  # Optional row including the "disqualified" message/reason
  # (When this is present, usually no relay swimmer rows are added)
  - name: rel_dsq
    required: false
    parent: rel_team
    fields:
      - name: disqualify_type
        # "All non-digit words from column 120 onward until the end of line"
        format: "^(?!\\s+(Orario Ufficializzazione|\\d{1,2}|www.ficr.it|corsie|Pagina))\\s{120,}(\\D+\\s?)+\\b"

  - name: rel_swimmer
    repeat: true
    parent: rel_team
    starts_at_row: 8
    # When the team is disqualified usually no swimmer rows are added:
    required: false
    rows:
      - name: rel_swimmer1
        fields:
          - name: swimmer_name
            format: "\\s+(\\D+(?>['`\\-\\.\\s]\\s?\\D+){1,4})\\s+"
            pop_out: false
            token_end: 31
          - name: nation
            format: "\\s+(\\w{2,3})\\s*"
            pop_out: false
            token_start: 31
            token_end: 68

          - name: lap50
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 70
            token_end: 82
            required: false
          - name: lap100
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 82
            token_end: 94
            required: false
          - name: lap150
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 95
            token_end: 108
            required: false
          - name: lap200
            format: "\\s*((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            pop_out: false
            token_start: 109
            token_end: 118
            required: false

      - name: rel_swimmer2
        fields:
          - name: year_of_birth
            format: "\\s{54,}(\\d{4})\\s*"
            pop_out: false
            token_end: 70

          - name: delta100
            format: "\\s*\\(((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\)\\s*"
            pop_out: false
            token_start: 83
            required: false

      - name: rel_separator
        required: false
        format: "^$"

  # Ignored header (DSQ label is stored under rel_team)
  - name: disqualified
    parent: rel_category
    required: false
    lambda: strip
    format: "\\s*(Non Classificati|Fuori Gara)\\b"

  - name: empty_row
    parent: event
    required: false
    format: "^$"

  - name: publish_time
    parent: event
    required: false
    lambda: strip
    format: "Orario Ufficializzazione"

  # End-Of-Page context
  - name: footer
    parent: event
    eop: true
    row_span: 6
    repeat: true
    starts_with: Elaborazione dati a cura della Federazione Italiana Cronometristi -
    fields:
      - name: pool_type
        format: "\\s*www.ficr.it\\s+(\\d{1,2} corsie \\d{2}m)\\s+Pagina\\s*"
      # Actual last-line context marker
      - name: page_delimiter
        format: "nuoto.ficr.it\\b"
