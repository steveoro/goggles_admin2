#
# = Layout format definition for PdfResults::FormatParser
#
# - Supports 50m only, or any other event w/o lap timings and results on a single line
# - No Ficr logo or watermark on each page (different footer); examples: "DDS Trophy"
# - Spawn of 1-ficr1, example category header w/ result:
#
# ---8<---
#                                               50m Stile Libero Master Misti
#                                                          Riepilogo
# Pos. Nominativo                       Naz    Anno   Società                         Ser.    Cor   Pos           Tempo      Pti. SC   Master
#  » segue M45 Master Femmine 45 - 49
# 3 MELCHIORRE SANDRONA                 ITA    1975   POLISP ZIOCANTANTE SSD           14     4     8             34.67               776,17
# ---8<---
#
1-ficrnologo:
  - name: header
    at_fixed_row: 0
    repeat: true
    rows:
      # "header" row #0
      - fields:
        - name: edition
          required: false
          format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
          pop_out: false
        - name: meeting_name
          format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
          pop_out: false

      # "header" row #1
      - fields:
        - name: meeting_place
          # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
          format: "^\\s*(.{2,})?,\\s*\\d{2}"
        - name: meeting_date
          # Support month names too: dd(-/)mm(-/)yy(yy), dd MMM(...) yy(yy)
          format: "^\\s*(?>.{2,},\\s*)?(\\d{2}(?>[-\\/]\\d{2}[-\\/]\\d{2,4}|\\s\\w{3,}\\s\\d{2,4}))$"

      # Optional empty row #3
      - name: hdr_separator
        required: false
        format: "^$"

  - name: event
    repeat: true
    parent: header
    rows:
      - fields:
        - name: event_length
          lambda: strip
          format: "\\s*(\\d{2,4})m?\\s+"
        - name: event_type
          lambda: strip
          format: "\\s*(?>m\\s)?((\\w+\\s?){1,2})\\sMaster\\sMisti\\b"

      - fields:
        - name: event_sub_hdr
          lambda: strip
          format: "Riepilogo|Serie\\s\\d{2}"

  # Data columns header
  # Row #4:
  - name: results_hdr
    # (Repeat each page)
    repeat: true
    # repeat: false => ONCE per page max
    lambda: strip
    format: "\\s?Pos.\\s+Nominativo\\s+Naz\\s+Anno\\s+Società\\s+Ser.\\s+Cor(?>\\s+Pos\\.?)?\\s+Tempo\\s+Pti.\\sSC\\s+Master"

  # Optional row before category
  - name: cat_spacer
    parent: results_hdr
    required: false
    format: "^$"

  - name: category
    repeat: true
    # Whenever 'event' context changes, create a different DAO wrapping the fields:
    parent: event
    rows:
      # Another optional empty row (in older files)
      - name: cat_spacer2
        required: false
        format: "^$"

      - name: cat_title
        # Examples: "A20 Femmine", "M25 Master Femmine 25 -29", " » segue M40 Master Femmine 40 - 44"
        format: "^(?>\\s*»\\ssegue\\s|\\s{10,})([UAM]\\d{2}\\s(?>Under|Master)?\\s?(?>Femmine|Maschi))"
      # Optional empty row
      - name: cat_separator
        required: false
        format: "^$"

  # Actual data starts here:
  # Row #7 or #8:
  - name: results
    repeat: true
    # Whenever 'category' context changes, create a different DAO wrapping the fields:
    # (Do not use sub-contexts in rows as they can't be easily referenced)
    parent: category
    # Start searching for this context at:
    # starts_at_row: 7 #  ('7' is not true for older files, keep this commented out)
    fields:
      - name: rank
        format: "^\\s?(\\d{1,2}|SQ|RT|NP)\\s+"
        pop_out: false
        # Sometimes this may be missing due to technicalities:
        required: false
      - name: swimmer_name
        format: "^\\s{0,3}(?>\\d{1,2}|SQ|RT|NP)?\\s+(\\D{3,35})\\s{1,}\\w{3}\\s{2,}\\d{4}\\s{2,}"
        pop_out: false
      - name: nation
        format: "^\\s{0,3}(?>\\d{1,2}|SQ|RT|NP)?\\s+\\D{3,35}\\s{1,}(\\w{3})\\s{2,}\\d{4}\\s{2,}"
        pop_out: false
      - name: year_of_birth
        format: "^\\s{0,3}(?>\\d{1,2}|SQ|RT|NP)?\\s+\\D{3,35}\\s{1,}\\w{3}\\s{2,}(\\d{4})\\s{2,}"
        pop_out: false
      - name: team_name
        format: "\\s{1,}\\w{3}\\s{2,}\\d{4}\\s{2,}(.{3,30})\\s{2,}\\d{0,2}\\s{2,}"
        pop_out: false
      - name: heat_num
        format: "\\s{1,}\\w{3}\\s{2,}\\d{4}\\s{2,}.{3,30}\\s{2,}(\\d{1,2})\\s{2,}"
        pop_out: false
        required: false
      - name: lane_num
        format: "\\s{1,}\\w{3}\\s{2,}\\d{4}\\s{2,}.{3,30}\\s{2,}\\d{1,2}\\s{2,}(\\d{1,2})\\s{2,}"
        pop_out: false
        # This may be missing at all (DNS, RT or even due to technicalities):
        required: false
      - name: heat_rank
        format: "\\s+\\d{1,3}\\s+\\d{1,2}\\s+(\\d{1,2}|SQ|RT|NP)?\\s{1,}(?>(?>\\d{1,2}[':.])?\\d{1,2}[\":.]\\d{1,2}|\\w{4,})"
        pop_out: false
        # This may be missing as above:
        required: false
      - name: timing
        format: "\\s+\\d{1,3}\\s+\\d{1,2}\\s+(?>\\d{1,2}|SQ|RT|NP)?\\s{1,}((?>\\d{1,2}[':.])?\\d{1,2}[\":.]\\d{1,2})\\s*"
        pop_out: false
        # DNS don't have timings:
        required: false
      # NOT found yet (TODO: anchor this to timing & following std_score or disqualify_type):
      # - name: team_score
      #   format: "\\s*(\\d{1,5}[,.]\\d{1,2})\\b"
      #   pop_out: false
      #   required: false
      - name: disqualify_type
        format: "\\s+(?>SQ|RT|NP)?\\s+(Arrivo\\sirr.+|Squal.+|Nuotata.+|Falsa.+|Virata.+|Partenza.+)$"
        pop_out: false
        required: false
      - name: std_score
        format: "\\s{5,}(\\d?[,\\.]?\\d{1,3}[,\\.]\\d{1,2})$"
        pop_out: false
        # U25 / A20 do not score:
        required: false

  # NOT found yet:
  # - name: results_ext
  #   parent: results
  #   required: false
  #   fields:
  #     - name: dsq_details
  #       format: "\\s{135}([\\w\\s]+)"
  #       pop_out: false

  - name: disqualified
    parent: category
    required: false
    lambda: strip
    format: "\\s*Non Classificati|Fuori gara\\b"

  - name: empty_row
    parent: event
    required: false
    format: "^$"

  - name: publish_time
    # Choose a link with the wrapping parent context from which the scan may resume
    # when after this, independently from check success or failure:
    parent: event
    required: false
    lambda: strip
    format: "Orario Ufficializzazione"

  # End-Of-Page context
  - name: footer
    parent: event
    repeat: true
    eop: true
    row_span: 4
    fields:
      - name: pool_type
        required: false
        format: "\\s+(\\d{1,2} corsie \\d{2}m)\\s+"
      - name: page_num
        format: "\\s+Pagina\\s(\\d{1,2})\\sdi\\s\\d{1,2}"
