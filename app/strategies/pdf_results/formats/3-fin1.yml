#
# = Layout format definition for PdfResults::FormatParser
#
# Undescriptive, no lap timings, includes team rankings & stats most of the times
#
3-fin1:
  - name: header
    at_fixed_row: 0
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: false
    rows:
      # "header" row-0
      - name: hdr0
        fields:
          - name: edition
            required: false
            format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
            pop_out: false
          - name: meeting_name
            format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
            pop_out: false
      - name: hdr_separator0
        format: "^$"

      # "header" row-2
      - name: hdr1
        fields:
          - name: org_team_name
            format: "\\s+Manifestazione\\sorganizzata\\sda\\s+(.+)"
            pop_out: false
      - name: hdr_sep1
        format: "^$"

      # "header" row-4
      - name: hdr2
        fields:
          - name: meeting_place
            lambda: strip
            format: "\\s*((\\w{1,}['\\s]?)+)\\s*[,-]\\s*"
          - name: meeting_date
            lambda: strip
            format: "\\s*(\\d{2}([-\/]\\d{2}[-\/]\\d{2,4}|\\s\\w{3,}\\s\\d{2,4}))\\b"
      - name: hdr_sep2
        format: "^$"

      # "header" row-6
      - name: hdr3
        fields:
          - name: pool_type
            lambda: strip
            format: "\\s*Vasca\\s(?>m\\.|da)\\s(\\d{2})(?>\\s?m\\.)?"

  - name: event
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    parent: header
    rows:
      # "event" row-0: 2 empty rows before each event change
      - name: event_sep0
        format: "^$"
        # This will make the parser consume 2 rows at once (even if only the first one is actually empty)
        row_span: 2
        # Sometimes the row will be 3, or may be captured by the wildcard empty row context below:
        required: false
      - name: event_detail
        fields:
          - name: event_length
            lambda: strip
            # Supports both relays & individual results:
            format: "\\s*(m?i?staffetta\\s+[468]x\\d{2,4}|\\d{2,4})\\s+(?>(\\w+\\s?){1,3})\\s*\\-\\s*cronometraggio\\s"
            pop_out: false
          - name: event_type
            lambda: strip
            format: "\\s*(?>m?i?staffetta\\s+[468]x\\d{2,4}|\\d{2,4})\\s+((?>\\w+\\s?){1,3})\\s*\\-\\s*cronometraggio\\s"
            pop_out: false
      # "event" row-3:
      - name: event_sep2
        format: "^$"

  - name: category
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    # Whenever 'event' context changes, create a different DAO wrapping the fields:
    parent: event
    rows:
      - name: cat_sep0
        # On a page change + category change, the empty row may be missing:
        required: false
        format: "^$"

      - fields:
        - name: event_length
          format: "\\s+(\\d{2,4})\\s+(?>stile(?>\\slibero)?|dorso|rana|delfino|farfalla|misti)\\s+(?>maschil?.?|femmin.l?.?)?\\s*\\-\\s+Categoria\\s+"
          pop_out: false
        - name: event_type
          format: "\\s+(?>\\d{2,4})\\s+(stile(?>\\slibero)?|dorso|rana|delfino|farfalla|misti)\\s+(?>maschil?.?|femmin.l?.?)?\\s*\\-\\s+Categoria\\s+"
          pop_out: false
        - name: gender_type
          format: "\\s+(maschil?.?|femmin.l?.?)\\s+\\-\\s+Categoria\\s+"
          pop_out: false
        - name: cat_title
          format: "\\s+\\-\\s+Categoria\\s+((Master|Under)\\s\\d{2})\\s*"
          pop_out: false
        - name: base_timing
          required: false
          format: "\\s*Tempo Base\\s*:\\s*(\\d{1,2}?[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})"
          pop_out: false

  # Made a sibling row instead of a child row given the single separator can fall after a page
  # break in this layout format:
  - name: cat_sep1
    parent: category
    required: false
    format: "^-{90,}$"

  # Actual data starts here:
  - name: results
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    # Whenever 'category' context changes, create a different DAO wrapping the fields:
    # (Do not use sub-contexts in rows as they can't be easily referenced)
    parent: category
    fields:
      - name: rank
        format: "^\\s{5,8}(\\d{1,2})\\s{3,7}\\w+"
        pop_out: false
        # DSQ don't have rank:
        required: false
      - name: swimmer_name
        format: "^\\s{5,8}(?>\\d{1,2})?\\s{3,8}(\\D+(['`\\-\\s]\\s?\\D*){1,4})"
        token_end: 48
        pop_out: false

      - name: year_of_birth
        format: "\\s*(\\d{4})\\s*"
        pop_out: false
        token_start: 41

      - name: team_name
        # "Ã¹" may come up due to wrong encoding in PDFs (== "ù")
        format: "\\s+\\d{4}\\s{1,}(.{3,})\\s{1,}(?>\\d{1,2}[':\"\\.]|Ritir|Squal)"
        token_start: 35
        pop_out: false
      - name: timing
        format: "\\s*(\\d{1,2}?[':\"\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
        token_start: 76
        pop_out: false
        # DSQ don't have timings:
        required: false

      - name: disqualify_type
        format: "\\s*(Squalif\\.?\\s(\\D+\\s?)+|Ritir.+|Assente)$"
        token_start: 75
        pop_out: false
        required: false
      - name: std_score
        format: "\\s*(?>\\d{1,2}?[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\s+(\\d?[,\\.]?\\d{1,4}[,\\.]\\d{1,2})\\b"
        token_start: 76
        pop_out: false
        # U25/A20/DSQ do not score:
        required: false

  - name: dsq_ind_ext
    parent: results
    required: false
    fields:
      - name: dsq_details
        format: "^\\s?(partenz\\w+|irregol\\w+|arriv\\w+)$"
        pop_out: false

  - name: empty_row
    repeat: true
    parent: event
    required: false
    format: "^$"

  - name: rel_category
    # Whenever 'event' context changes, create a different DAO wrapping the fields:
    parent: event
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    rows:
      # - name: rel_sep0
      #   # On a page change + category change, the empty row may be missing:
      #   required: false
      #   format: "^$"

      - fields:
        - name: event_length
          format: "^\\s*(m?i?staffetta\\s+[468]x\\d{2,3})\\s+((\\w+\\s?){1,3})\\s+\\-\\s+Categoria\\s+"
          pop_out: false
        - name: event_type
          format: "\\s*(?>m?i?staffetta\\s+[468]x\\d{2,4})\\s+(stile(?>\\slibero)?|dorso|rana|delfino|farfalla|mist.)\\s+(?>maschil?.?|femmin.l?.?)?\\s*\\-\\s+Categoria\\s+"
          pop_out: false
        - name: gender_type
          format: "\\s+(mistaffetta|maschil?.?|femmin.l?.?)\\s*.*\\s+\\-\\s+Categoria\\s+"
          pop_out: false
        - name: cat_title
          format: "\\s+\\-\\s+Categoria\\s+((?>M|U)\\d{2,3}-\\d{2,3})\\s*"
          pop_out: false
        - name: base_timing
          required: false
          format: "\\s*Tempo Base\\s*:\\s*(\\d{1,2}?[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})"
          pop_out: false

  # Made a sibling row instead of a child row given the single separator can fall after a page
  # break in this layout format:
  - name: rel_sep1
    parent: rel_category
    required: false
    format: "^-{90,}$"

  - name: rel_team
    parent: rel_category
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    rows:
      - name: rel_team1
        fields:
          - name: rank
            format: "^\\s{10,}(\\d{1,2}|SQ|RT|NP|Fuori gara)\\s{3,}"
            pop_out: false
            required: false
          - name: team_name
            # Exclude non-relay team names as much as possible:
            format: "^(?>\\s{16,}|\\s{10,}\\d{1,2}\\s{3,8}|\\s{4,}Fuori\\sgara\\s{3,8})(.+)(?=\\s{2}(?>\\d{1,2}['\"\\.:]\\d{2}|Squalif|Non\\spartiti))"
            pop_out: false
          - name: timing
            format: "\\s*(\\d{1,2}?[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\s*"
            token_start: 60
            pop_out: false
            required: false

          - name: disqualify_type
            format: "\\s*(Squalif.+|Ritir.+|Assent.+|Non partiti)$"
            token_start: 60
            pop_out: false
            required: false
          - name: std_score
            format: "\\s*(\\d?[,\\.]?\\d{1,4}[,\\.]\\d{1,2})"
            token_start: 60
            pop_out: false
            required: false

  - name: rel_dsq
    parent: rel_team
    required: false
    fields:
      - name: dsq_label
        format: "^\\s?(partenz\\w+|irregol\\w+|arriv\\w+)$"
        pop_out: false

  - name: rel_swimmer
    parent: rel_team
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    repeat: true
    rows:
      - name: rel_swimmer1
        fields:
          - name: swimmer_name
            format: "(?>^\\s{5,})(\\D{5,})\\s{1,}\\d{4}$"
            pop_out: false
          - name: year_of_birth
            format: "^\\s{5,}\\D+\\s{1,}(\\d{4})$"
            pop_out: false

  - name: ranking_hdr
    required: false
    parent: header
    rows:
      - name: ranking_title
        format: "^\\s+Classifica Società"
      - name: ranking_sep1
        format: "^$"

  - name: team_ranking
    parent: ranking_hdr
    required: false
    repeat: true
    rows:
      - name: team_ranking1
        fields:
          - name: rank
            format: "^\\s*(\\d{1,3}|SQ|RT|NP)\\s{1,}"
            pop_out: false
          - name: team_name
            format: "^\\s*\\d{1,3}(.+)(?<!\\s{4}\\d'\\d{2}\"\\d{2})(?<!\\s{4}\\d{2}'\\d{2}\"\\d{2})\\s{3,}\\d{1,7}[\\.,]\\d{2}$"
            pop_out: false
          - name: overall_score
            format: "(?<!\\s{4}\\d'\\d{2}\"\\d{2})(?<!\\s{4}\\d{2}'\\d{2}\"\\d{2})\\s{3,}(\\d{1,7}[\\.,]\\d{2})$"
            pop_out: false

  - name: stats_hdr
    parent: header
    required: false
    rows:
      - name: stats_title
        format: "^\\s+Statistiche"
      - name: stats_sep1
        format: "^$"

  - name: stats
    parent: stats_hdr
    required: false
    repeat: true
    rows:
      - name: stats_row
        fields:
          - name: stats_label
            format: "^\\s*((Numero|Società che|Percentuale)\\s([\\wà\\d\\.\\-&%'`]+\\s?)+)\\s*"
            pop_out: false
            token_end: 52
          - name: stats_value
            format: "\\s*(([\\d\\.,\\%]+\\s?)+)$"
            token_start: 39
            pop_out: false
      - name: stats_sep2
        required: false
        format: "^$"
