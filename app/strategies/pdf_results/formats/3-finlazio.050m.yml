#
# = Layout format definition for PdfResults::FormatParser
#
# - Spawn of "FIN Piemonte" but with category header repeated for each event as in "3-finfvg";
# - 50m-only;
# - meeting name on top, meeting place on EOP.
#
3-finlazio.050m:
  - name: header
    at_fixed_row: 0
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false according to current implementation:
    required: false
    # Sometimes the header w/ the meeting title will be repeated, in between events:
    repeat: true
    rows:
      - name: hdr_title
        fields:
          - name: edition
            required: false
            format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+)\\D?\\D?\\s+"
            pop_out: false
          - name: meeting_name
            format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?\\D?\\D?\\s+(.+)$"
            pop_out: false
      - name: hdr_pool
        fields:
          - name: pool_type
            lambda: strip
            format: "\\s*V\\.\\s(\\d{2})m"
      - name: hdr_sep
        format: "^$"
      - name: hdr_results
        # Using a custom non-existent field name in keys array to skip completely this row
        # from being part of the resulting context key:
        keys: [skip_me]
        format: "^\\s{20,}Risultati$"

  # Data columns header
  - name: results_hdr
    repeat: true
    rows:
      - name: results_hdr1
        format: "^\\s?POS\\s{2,}COGNOME\\sE\\sNOME\\s{5,}NAZ\\s{1,}ANNO\\s{2,}SOCIETA'\\s{15,}ARRIVO\\s{2,}PUNTI"
      - name: results_hdr_sep1
        format: "^$"
      # Whenever the event is not repeated on page start, 2x empty rows take its place:
      - name: results_hdr_sep2
        required: false
        format: "^$"
      - name: results_hdr_sep3
        required: false
        format: "^$"

  - name: event
    # Repeats only in between events, so this is not required on each page:
    # required: false
    repeat: true
    starts_at_row: 6
    parent: header
    rows:
      - fields:
        - name: event_length
          format: "^\\s{20,}(50)\\s?m\\s+"
          pop_out: false
        - name: event_type
          format: "^\\s{20,}50\\s?m\\s+(Stile(?>\\sLibero)?|Dorso|Rana|Delfino|Farfalla|Misti)\\s[-–]\\s"
          pop_out: false
        - name: cat_title
          format: "\\s[-–]\\s(Assoluti|Under|Master)\\s(?>Femmine|Maschi|mist)"
          pop_out: false
        - name: gender_type
          format: "\\s[-–]\\s(?>Assoluti|Under|Master)\\s(?>(Femmine|Maschi)|mist)"
          required: false
          pop_out: false
      - name: event_sep0
        format: "^$"

  - name: category
    repeat: true
    starts_at_row: 4
    parent: event
    rows:
      - name: cat_separator
        required: false
        format: "^$"
      - fields:
        - name: cat_title
          format: "^\\s{45,}((?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2})\\s?(?>[MF]|DONNE|UOMINI)?"
          pop_out: false
        # Gender type may be missing for "Under 25":
        - name: gender_type
          format: "^\\s{45,}(?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2}\\s?([MF]|DONNE|UOMINI)"
          required: false
          pop_out: false

  # Actual data starts here:
  - name: results
    repeat: true
    parent: category
    starts_at_row: 4
    fields:
      - name: rank
        # DSQ will have rank 0:
        format: "^\\s{0,10}(\\d{1,3})\\s{1,10}\\w+"
        pop_out: false
      - name: swimmer_name
        format: "^\\s{0,10}(?>\\d{1,3})?\\s{1,10}((?>[a-zA-Z\\.'`àèéìòù]{1,16}[\\-\\s]?){1,8})\\s{2,}(?>[a-zA-Z]{3})?\\s{1,}\\d{4}\\s{2,}"
        pop_out: false
      - name: nation
        format: "^\\s{0,10}(?>\\d{1,3})?\\s{1,10}(?>[a-zA-Z\\.'`àèéìòù]{1,16}[\\-\\s]?){1,8}\\s{2,}([a-zA-Z]{3})\\s{1,}\\d{4}\\s{2,}"
        # Sometimes the 3 letter nation code may be missing:
        required: false
        pop_out: false
      - name: year_of_birth
        format: "^\\s{0,10}(?>\\d{1,3})?\\s{1,10}(?>[a-zA-Z\\.'`àèéìòù]{1,16}[\\-\\s]?){1,8}\\s{2,}(?>[a-zA-Z]{3})?\\s{1,}(\\d{4})\\s{2,}"
        pop_out: false
      - name: team_name
        format: "\\s{2,}\\d{4}\\s{2,}(.{3,31})(?>\\s{2,}|$)"
        token_start: 34
        pop_out: false
      - name: timing
        format: "\\s{1,}(?>[a-zA-Z]{3})?\\s{1,}\\d{4}\\s{2,}.{3,29}\\s{3,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})"
        token_start: 34
        pop_out: false
        # DSQ don't have timings:
        required: false
      - name: std_score
        format: "\\s{2,}(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s{2,}(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})$"
        token_start: 34
        pop_out: false
        # U25 / A20 do not score:
        required: false

  - name: dsq_label
    parent: results
    required: false
    rows:
      - name: dsq_spacer1
        required: false
        format: "^$"
      - name: dsq_type
        fields:
          - name: disqualify_type
            format: "^\\s{15,}(falsa\\spartenz\\w+|arrivo\\sirr.*|virata\\s.+|nuotata\\s.*)"
            pop_out: false
      - name: dsq_spacer2
        required: false
        format: "^$"

  - name: disqualified
    parent: event
    required: false
    rows:
      - name: dsq_spacer1
        format: "^$"
      - name: dsq_title
        format: "^\\s{3,}NON\\sCLASSIFICATI|FUORI\\sGARA"
      - name: dsq_spacer2
        required: false
        format: "^$"

  - name: publish_time
    parent: event
    required: false
    row_span: 2
    format: "^\\s+Pubblicata:"

  # End-Of-Page, variable span: 2-3
  - name: footer
    parent: header
    eop: true
    repeat: true
    rows:
      - name: footer_place
        fields:
          # Supported examples:
          # "Ostia 08-23/02/2020"
          # "Ostia 08..23-02-2020"
          # "Cefalù di Ostia, 12-12-1950"
          # "Ostia, 08-23/02/2020"
          # "Centro Federale di Ostia (RM), 12-12-1950"
          # "Vercelli della Montagna / 08-23/02/2020"
          # "Reggio nell'Emilia, 08-23/02/2020"
          - name: meeting_date
            # Extract the date first, popping it out so that the remainder can be treated as the meeting place:
            format: "[,;\\/\\s](?>\\d{1,2}\\s?(?>-|\\.\\.)\\s?)?(\\d{2}[\\/-]\\d{2}[\\/-](?>\\d{4}|\\d{2}))(?>\\s{10,}|$)"
            # pop_out: false
          - name: meeting_place
            # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
            format: "^((?>\\w+(?<!\\d)['àéèìòù]?\\s?){1,})"
            pop_out: false
      - name: footer_page
        format: "^\\s{70,}Page\\s\\d{1,}"

      - name: footer_timestamp
        required: false
        format: "^\\s{50,}Stampata\\sil\\s\\d{1,2}"

  - name: empty_row
    repeat: true
    parent: event
    required: false
    format: "^$"
