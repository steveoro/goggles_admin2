#
# = Layout format definition for PdfResults::FormatParser
#
# - Spawn of "FIN Lazio" but with category header repeated for each event as in "3-finfvg" and on each row;
# - 200m-only w/ lap timings every 50m;
# - meeting name on top, meeting place on EOP;
# - includes a category column ("CAT") instead of nation ("NAZ");
# - includes both base time & a dedicated row for the current category record ("RR") at the start of each event.
#
3-finsicilia.200m:
  - name: header
    at_fixed_row: 0
    # Doesn't repeat always on each page:
    required: false
    # Sometimes the header w/ the meeting title will be repeated, in between events:
    repeat: true
    rows:
      - name: hdr_title
        fields:
          - name: edition
            required: false
            format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
            pop_out: false
          - name: meeting_name
            format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
            pop_out: false
      - name: hdr_pool
        fields:
          - name: pool_type
            lambda: strip
            format: "\\s*V\\.\\s(\\d{2})m"
      - name: hdr_sep
        format: "^$"
      - name: hdr_results
        # Using a custom non-existent field name in keys array to skip completely this row
        # from being part of the resulting context key:
        keys: [skip_me]
        format: "^\\s{20,}Risultati$"

  # Data columns header
  - name: results_hdr
    repeat: true
    rows:
      - name: results_hdr1
        format: "^\\s?POS\\s{2,}COGNOME\\sE\\sNOME\\s{2,}CAT\\s{1,}ANNO\\s{1,}SOCIETA'\\s{10,}(?>50\\sm)?\\s{3,}(?>100\\sm)?\\s{3,}(?>150\\sm)?\\s{3,}ARRIVO\\s{1,}PUNTI"
      - name: results_hdr_sep1
        format: "^$"
      # Whenever the event is not repeated on page start, 2x empty rows take its place:
      - name: results_hdr_sep2
        required: false
        format: "^$"
      - name: results_hdr_sep3
        required: false
        format: "^$"

  - name: event
    # Repeats only in between events, so this is not required on each page:
    required: false
    repeat: true
    starts_at_row: 4
    parent: header
    rows:
      - fields:
        - name: event_length
          format: "^\\s{20,}(200)\\s?m\\s+"
          pop_out: false
        - name: event_type
          format: "^\\s{20,}200\\s?m\\s+(Stile(?>\\sLibero)?|Dorso|Rana|Delfino|Farfalla|Misti)\\s[-–]\\s"
          pop_out: false
        - name: cat_title
          format: "\\s[-–]\\s(Assoluti|Under|Master)\\s*(?>Femmine|Maschi|mist)?"
          pop_out: false
        - name: gender_type
          format: "\\s[-–]\\s(?>Assoluti|Under|Master)\\s*(?>(Femmine|Maschi)|mist)?"
          required: false
          pop_out: false
      - name: event_sep0
        format: "^$"

  - name: category
    repeat: true
    starts_at_row: 4
    parent: event
    rows:
      - name: cat_separator
        required: false
        format: "^$"
      - fields:
        - name: cat_title
          format: "^\\s{40,}((?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2})\\s?[MF]?"
          pop_out: false
        # Gender type may be missing for "Under 25":
        - name: gender_type
          format: "^\\s{40,}(?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2}\\s?(MASCHI|FEMMIN|M|F)"
          required: false
          pop_out: false
        - name: base_time
          format: "\\s{2,}TEMPO\\sBASE\\s?:\\s{2,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})$"
          required: false
          pop_out: false

      - name: cat_record_sep0
        required: false
        format: "^$"
      - name: cat_record_data
        required: false
        fields:
          - name: ita_record
            format: "^\\s{4,}RR\\s{5,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s{1,}\\w+"
            pop_out: false
          - name: ita_record_notes
            format: "^\\s{4,}RR\\s{5,}(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s{1,}(\\D{3,35}.+)$"
            # Typical format (with variable spaces in between each field - thus, the squeeze):
            # "RR <record_timing> <swimmer_name> <swimmer_nation> <record_place> <record_nation> <record_date>""
            pop_out: false
      - name: cat_record_sep1
        required: false
        format: "^$"

  # Actual data starts here:
  - name: results
    repeat: true
    parent: category
    starts_at_row: 4
    rows:
      - name: results_detail
        fields:
          - name: rank
            # DSQ will have rank 0:
            format: "^\\s{0,10}(\\d{1,3})\\s{1,10}\\w+"
            pop_out: false
          - name: swimmer_name
            format: "^\\s{0,10}(?>\\d{1,3})\\s{1,10}(\\D{3,28})\\s{2,}(?>\\w{3})?\\s{1,}\\d{4}\\s{2,}"
            pop_out: false
          - name: cat_title
            # Typical format: "<2_char_age_code><1_char_gender>"
            format: "^\\s{0,10}(?>\\d{1,3})\\s{1,10}\\D{3,28}\\s{2,}(\\w{3})\\s{1,}\\d{4}\\s{2,}"
            pop_out: false
          - name: year_of_birth
            format: "^\\s{0,10}(?>\\d{1,3})\\s{1,10}\\D{3,28}\\s{2,}(?>\\w{3})?\\s{1,}(\\d{4})\\s{2,}"
            pop_out: false
          - name: team_name
            format: "\\s{1,}\\d{4}\\s{2,}(.{3,30})(?>\\s{2,}|$)"
            token_start: 30
            pop_out: false

          - name: lap50
            format: "\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){3}"
            pop_out: false
            required: false
          - name: lap100
            format: "(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){1}\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){2}"
            pop_out: false
            required: false
          - name: lap150
            format: "(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){2}\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){1}"
            pop_out: false
            required: false

          - name: timing
            format: "(?>\\s+(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}){3}\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})"
            pop_out: false
            # DSQ don't have timings:
            required: false
          - name: disqualify_type
            format: "\\s+(ASS|SQ|RT|RIT|NP)\\b"
            token_start: 80
            pop_out: false
            required: false
          - name: std_score
            format: "\\s{2,}(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s{1,}(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})$"
            token_start: 80
            pop_out: false
            # U25 / A20 do not score:
            required: false

      - name: result_deltas
        required: false
        fields:
          - name: delta100
            format: "^\\s{80,}((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})\\s+"
            pop_out: false
            required: false
          - name: delta150
            format: "^\\s{80,}(?>(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}\\s+)?((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})\\s+"
            pop_out: false
            required: false
          - name: delta200
            format: "\\s+(?>(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})$"
            pop_out: false
            required: false

  - name: dsq_label
    parent: results
    required: false
    rows:
      - name: dsq_spacer1
        required: false
        format: "^$"
      - name: dsq_type
        fields:
          - name: disqualify_type
            format: "^\\s{15,}(falsa\\spartenz\\w+|arrivo\\sirr.*|virata\\s.+|nuotata\\s.*)"
            pop_out: false
      - name: dsq_spacer2
        required: false
        format: "^$"

  - name: disqualified
    parent: category
    required: false
    rows:
      - name: dsq_spacer1
        required: false
        format: "^$"
      - name: dsq_title
        format: "^\\s{3,}NON\\sCLASSIFICATI|FUORI\\sGARA"
      - name: dsq_spacer2
        required: false
        format: "^$"

  - name: publish_time
    parent: event
    required: false
    rows:
      - name: publish_sep0
        required: false
        format: "^$"
      - name: publish_time1
        # Don't include this in the keys: (empty keys like empty rows are skipped by default)
        keys: [skip_me]
        format: "^\\s+Pubblicata:"

  # End-Of-Page, variable span: 2-3
  - name: footer
    parent: header
    eop: true
    repeat: true
    rows:
      - name: footer_place
        fields:
          - name: meeting_date
            # Extract the date first, popping it out so that the remainder can be treated as the meeting place:
            format: "[,;\\/\\s](?>\\d{1,2}\\s?(?>-|\\.\\.)\\s?)?(\\d{2}[\\/\\-\\s](?>\\d{2}|\\w{3,})[\\/\\-\\s](?>\\d{4}|\\d{2}))"
            # pop_out: false
          - name: meeting_place
            # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
            format: "^((?>\\w+(?<!\\d)['àéèìòù]?\\s?){1,})"
            pop_out: false
      - name: footer_page
        format: "^\\s{70,}Page\\s\\d{1,}"

      - name: footer_timestamp
        required: false
        format: "^\\s{50,}Stampata\\sil\\s\\d{1,2}"

  - name: empty_row
    repeat: true
    parent: event
    required: false
    format: "^$"
