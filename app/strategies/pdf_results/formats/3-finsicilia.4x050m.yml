#
# = Layout format definition for PdfResults::FormatParser
#
# - Copy/Spawn of "FIN FVG" (specifically, subformat ".4x050m");
# - 4x50m-only w/ lap timings and YOB and even category for each swimmer;# - meeting name on top, meeting place on EOP;
# - includes a category column ("CAT") instead of nation ("NAZ") -- same column usage as 3-finfvg.4x050m;
# - includes base time at the start of each event.
# - meeting name on top, meeting place on EOP.
#
3-finsicilia.4x050m:
  - name: header
    at_fixed_row: 0
    # Doesn't repeat always on each page:
    required: false
    # Sometimes the header w/ the meeting title will be repeated, in between events:
    repeat: true
    rows:
      - name: hdr_title
        fields:
          - name: edition
            required: false
            format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
            pop_out: false
          - name: meeting_name
            format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
            pop_out: false
      - name: hdr_pool
        fields:
          - name: pool_type
            lambda: strip
            format: "\\s*V\\.\\s(\\d{2})m"
      - name: hdr_sep
        format: "^$"
      - name: hdr_results
        # Using a custom non-existent field name in keys array to skip completely this row
        # from being part of the resulting context key:
        keys: [skip_me]
        format: "^\\s{20,}Risultati$"

  # Data columns header
  - name: results_hdr
    repeat: true
    rows:
      - name: results_hdr1
        format: "^\\s?POS\\s{2,}STAFFETTA\\s{15,}CAT\\s{5,}(?>SOCIETA')?\\s{10,}(?>50\\sm)?\\s{2,}(?>100\\sm)?\\s{2,}(?>150\\sm)?\\s{2,}ARRIVO\\s*(?>Record|PUNTI)?"
      # Whenever the event is not repeated on page start, most of the times 1x empty rows interleaves the header:
      - name: results_hdr_sep0
        required: false
        format: "^$"
      - name: results_hdr2
        format: "^\\s{5,}COGNOME\\sE\\sNOME\\s{2,}ANNO\\s{1,}CAT\\s*(?>50\\sm)?\\s*(?>100\\sm)?\\s*(?>150\\sm)?\\s*(?>Totale)?"
      - name: results_hdr_sep1
        format: "^$"
      # Whenever the event is not repeated on page start, at least 2x empty rows take its place:
      - name: results_hdr_sep2
        required: false
        format: "^$"
      - name: results_hdr_sep3
        required: false
        format: "^$"

  - name: event
    # Repeats only in between events, so this is not required on each page:
    required: false
    repeat: true
    starts_at_row: 4
    parent: header
    rows:
      - fields:
        - name: event_length
          format: "^\\s{20,}(?>Mista\\s)?([468]x50)\\s?m\\s+"
          pop_out: false
        - name: event_type
          format: "^\\s{20,}(?>Mista\\s)?[468]x50\\s?m\\s+(Stile(?>\\sLibero)?|Misti)\\s[-–]\\s"
          pop_out: false
        - name: cat_title
          format: "\\s[-–]\\s(Assoluti|Under|Master)\\s*(?>Femmine|Maschi|mist)?"
          pop_out: false
        - name: gender_type
          format: "\\s[-–]\\s(?>Assoluti|Under|Master)\\s*(?>(Femmine|Maschi)|mist)?"
          required: false
          pop_out: false
      - name: event_sep0
        format: "^$"

  - name: rel_category
    repeat: true
    # May lack whenever a category is reported on the next page:
    required: false
    starts_at_row: 4
    parent: event
    rows:
      - name: cat_separator
        required: false
        format: "^$"
      - fields:
        - name: cat_title
          format: "^\\s{40,}((?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2,3})\\s?[MF]?"
          pop_out: false
        # Gender type may be missing for "Under 25":
        - name: gender_type
          format: "^\\s{40,}(?>MASTER\\s|UNDER\\s|PROPAGANDA\\s)?\\d{2,3}\\s?(MASCHI|FEMMIN|M|F)"
          required: false
          pop_out: false
        - name: base_time
          format: "\\s{2,}TEMPO\\sBASE\\s?:\\s{2,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})$"
          required: false
          pop_out: false

      - name: cat_record_sep0
        required: false
        format: "^$"
      - name: cat_record_data
        required: false
        fields:
          - name: ita_record
            format: "^\\s{4,}RR\\s{5,}((?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2})\\s{1,}\\w+"
            pop_out: false
          - name: ita_record_notes
            format: "^\\s{4,}RR\\s{5,}(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s{1,}(\\D{3,35}.+)$"
            # Typical format (with variable spaces in between each field - thus, the squeeze):
            # "RR <record_timing> <swimmer_name> <swimmer_nation> <record_place> <record_nation> <record_date>""
            pop_out: false
      - name: cat_record_sep1
        required: false
        format: "^$"

  # Actual data starts here:
  - name: rel_team
    repeat: true
    parent: rel_category
    starts_at_row: 4
    rows:
      - name: results_detail
        fields:
          - name: rank
            format: "^\\s{0,10}(\\d{1,3})\\s{1,8}\\d{0,2}\\s{1,3}\\w+"
            required: false
            pop_out: false
          - name: lane_num
            format: "^\\s{0,10}\\d{0,3}\\s{1,8}(\\d{1,2})\\s{1,3}\\w+"
            required: false
            pop_out: false
          # In this format, most of the time the team name is used for the relay name (but may differ slightly from the actual team name)
          - name: team_name_alt
            format: "^\\s{0,10}\\d{0,3}\\s{1,8}\\d{0,2}\\s{1,5}([A-z]+.{1,28})\\s{2,}\\w{0,3}\\s{2,}\\d{2,3}\\s*"
            pop_out: false
          # True team name, but not always present:
          - name: team_name
            format: "^\\s{0,10}\\d{0,3}\\s{1,8}\\d{0,2}\\s{1,5}([A-z]+.{1,28})\\s{2,}\\w{0,3}\\s{2,}\\d{2,3}\\s*([A-z]+.{1,28})\\s{2,}"
            required: false
            pop_out: false

          - name: lap50
            format: "\\s{5,}\\d{2,3}\\s{20,}((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})\\s+"
            pop_out: false
            required: false
          - name: lap100
            format: "\\s{5,}\\d{2,3}\\s{20,}(?>(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}\\s+){1}((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})"
            pop_out: false
            required: false
          - name: lap150
            format: "\\s{5,}\\d{2,3}\\s{20,}(?>(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}\\s+){2}((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})"
            pop_out: false
            required: false
          - name: timing
            format: "\\s{5,}\\d{2,3}\\s{20,}(?>(?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2}\\s+){3}((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})"
            pop_out: false
            # DSQ don't have timings:
            required: false
          - name: std_score
            format: "\\s{2,}(?>\\d{1,2}[':\\.])?\\d{1,2}[\":\\.]\\d{1,2}\\s{2,}(\\d?[,.]?\\d{1,4}[,.]\\d{1,2})$"
            pop_out: false
            # U25 / A20 do not score:
            required: false

      - name: rel_swimmer1
        fields:
          - name: swimmer_name1
            format: "^\\s{8,}(\\D{3,28})\\s{2,}\\d{4}\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          - name: year_of_birth1
            format: "^\\s{8,}\\D{3,28}\\s{2,}(\\d{4})\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          # Currently ignored, since the YOB is enough to compute the category per-se:
          - name: cat_title1
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}(\\d{2})\\w\\b"
            pop_out: false
          - name: gender_type1
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}\\d{2}(\\w)\\b"
            pop_out: false
          - name: delta50
            format: "\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})$"
            pop_out: false
            required: false

      - name: rel_swimmer2
        fields:
          - name: swimmer_name2
            format: "^\\s{8,}(\\D{3,28})\\s{2,}\\d{4}\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          - name: year_of_birth2
            format: "^\\s{8,}\\D{3,28}\\s{2,}(\\d{4})\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          # Currently ignored, since the YOB is enough to compute the category per-se:
          - name: cat_title2
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}(\\d{2})\\w\\b"
            pop_out: false
          - name: gender_type2
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}\\d{2}(\\w)\\b"
            pop_out: false
          - name: delta100
            format: "\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})$"
            pop_out: false
            required: false

      - name: rel_swimmer3
        fields:
          - name: swimmer_name3
            format: "^\\s{8,}(\\D{3,28})\\s{2,}\\d{4}\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          - name: year_of_birth3
            format: "^\\s{8,}\\D{3,28}\\s{2,}(\\d{4})\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          # Currently ignored, since the YOB is enough to compute the category per-se:
          - name: cat_title3
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}(\\d{2})\\w\\b"
            pop_out: false
          - name: gender_type3
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}\\d{2}(\\w)\\b"
            pop_out: false
          - name: delta150
            format: "\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})$"
            pop_out: false
            required: false

      - name: rel_swimmer4
        fields:
          - name: swimmer_name4
            format: "^\\s{8,}(\\D{3,28})\\s{2,}\\d{4}\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          - name: year_of_birth4
            format: "^\\s{8,}\\D{3,28}\\s{2,}(\\d{4})\\s{1,}\\d{2}\\w\\b"
            pop_out: false
          # Currently ignored, since the YOB is enough to compute the category per-se:
          - name: cat_title4
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}(\\d{2})\\w\\b"
            pop_out: false
          - name: gender_type4
            format: "^\\s{8,}\\D{3,28}\\s{2,}\\d{4}\\s{1,}\\d{2}(\\w)\\b"
            pop_out: false
          - name: delta200
            format: "\\s+((?>\\d{1,2}[':\\.])?\\d{2}[\":\\.]\\d{2})$"
            pop_out: false
            required: false

  - name: disqualified
    parent: rel_category
    required: false
    rows:
      - name: dsq_spacer1
        required: false
        format: "^$"
      - name: dsq_title
        format: "^\\s{3,}NON\\sCLASSIFICATI|FUORI\\sGARA"
      - name: dsq_spacer2
        required: false
        format: "^$"

  - name: dsq_label
    parent: rel_team
    required: false
    rows:
      - name: dsq_type
        fields:
          - name: disqualify_type
            format: "^\\s{15,}((?>\\d[°^]\\s)?cambio\\s\\w+.{0,30}|falsa\\spartenz\\w+.{0,30}|arrivo\\sirr\\w*.{0,30}|virata\\s\\w+.{0,30}|nuotata\\sirr\\w+.{0,30})"
            pop_out: false

  - name: publish_time
    parent: event
    required: false
    rows:
      - name: publish_sep0
        required: false
        format: "^$"
      - name: publish_time1
        # Don't include this in the keys: (empty keys like empty rows are skipped by default)
        keys: [skip_me]
        format: "^\\s+Pubblicata:"

  # End-Of-Page, variable span: 2-3
  - name: footer
    parent: header
    eop: true
    repeat: true
    rows:
      - name: footer_place
        fields:
          - name: meeting_date
            # Extract the date first, popping it out so that the remainder can be treated as the meeting place:
            format: "[,;\\/\\s](?>\\d{1,2}\\s?(?>-|\\.\\.)\\s?)?(\\d{2}[\\/\\-\\s](?>\\d{2}|\\w{3,})[\\/\\-\\s](?>\\d{4}|\\d{2}))"
            # pop_out: false
          - name: meeting_place
            # Support long place names like "Centro Federale di Ostia (RM)" or "Reggio nell'Emilia"
            format: "^((?>\\w+(?<!\\d)['àéèìòù]?\\s?){1,})"
            pop_out: false
      - name: footer_page
        format: "^\\s{70,}Page\\s\\d{1,}"

      - name: footer_timestamp
        required: false
        format: "^\\s{50,}Stampata\\sil\\s\\d{1,2}"

  - name: empty_row
    repeat: true
    parent: event
    required: false
    format: "^$"
