#
# = Layout format definition for PdfResults::FormatParser
#
# Supports both individual and relay results, but only for 4x50m relays.
# (Relay results are represented in this format only as 4 deltas, 1x per relay swimmer so the fields
# need to be identified properly as 50m deltas. Use dedicated formats for longer relays.)
#
# Example: Tuscany Masters' Meetings (Prato, Pontedera, Poggibonsi, ...)
#
4-dbmeeting:
  - name: header
    # Repeat (at_fixed_row, each page)
    at_fixed_row: 0
    # Each context that isn't repeated at least once *on each page* with this format should be set as optional:
    required: false
    repeat: false
    row_span: 8
    rows:
      # header row-0
      - name: hdr0
        starts_with: "DBMEETING"
        fields:
          - name: org_team_name
            required: false
            format: "\\s{10,}Società\\sorganizzatrice\\s(.+)$"

      # header row-1..5
      - name: hdr1
        row_span: 5
        format: "^\\s{20,}RISULTATI\\s[-–]\\sGARA$"

      # header row-6
      - fields:
        - name: edition
          required: false
          format: "^\\s{20,}(\\d{1,2}|[IVXLCM]+).{1,2}?\\s+"
          pop_out: false
        - name: meeting_name
          format: "^\\s{20,}(?>\\d{1,2}|[IVXLCM]+)?.{1,2}?\\s+(.+)$"
          pop_out: false

      # header row-7
      - name: hdr_place_date
        fields:
          - name: meeting_place
            format: "^\\s{20,}(.+)\\s-{1,3}\\s"
          - name: meeting_date
            # Support for 1 weekday name in date description:
            # - Ex.1: "<place> --- GIOVEDI' 25 APRILE 2019"
            # - Ex.2: "<place> --- 25 E 26 MAGGIO 2019"
            format: "^\\s{20,}.+\\s\\-{1,3}\\s(?>(?>lun(?>ed)?|mar(?>ted)?|merc(?>oled)?|gio(?>ved)?|ven(?>erd)?|sab(?>ato)?|dom(?>enica)?)[ìi']{0,2})?\\s?(\\d{1,2}(>?\\s?[e&,\\/]\\s?\\d{1,2})?(?>[-\\/]\\d{2}[-\\/]\\d{2,4}|\\s\\w{3,}\\s\\d{2,4}))"

  - name: event
    # NOTE that this is assumed to be repeated at least once *on each page* with this format:
    # Default:
    # required: true
    repeat: true
    parent: header
    rows:
      # Optional empty event separator:
      - name: event_sep0
        required: false
        format: "^$"

      - name: event_detail
        fields:
          - name: event_length
            format: "^\\s{5,}(?>(?>MI)?STAFFETTA\\s)?([468]x\\s?50|\\d{2,4})\\s(?>STILE(?>\\slibero)?|dorso|rana|farfalla|misti)\\s(?>FEMMINE|MASCHI|MISTA)\\s*GARA\\s\\d{1,2}"
            pop_out: false
          - name: event_type
            format: "^\\s{5,}(?>(?>MI)?STAFFETTA\\s)?(?>[468]x\\s?50|\\d{2,4})\\s(STILE(?>\\slibero)?|dorso|rana|farfalla|misti)\\s(?>FEMMINE|MASCHI|MISTA)\\s*GARA\\s\\d{1,2}"
            pop_out: false
          - name: gender_type
            format: "^\\s{5,}(?>(?>MI)?STAFFETTA\\s)?(?>[468]x\\s?50|\\d{2,4})\\s(?>STILE(?>\\slibero)?|dorso|rana|farfalla|misti)\\s(FEMMINE|MASCHI|MISTA)\\s*GARA\\s\\d{1,2}"
            pop_out: false
      # Optional carry-on event separator:
      - name: event_sep1
        required: false
        format: "^\\s{30,}_{1,5}CONTINUA$"

  - name: category
    # In order to validate/debug a format not always present in page,
    # we need to set "required" to false.
    # Default: true
    required: false
    repeat: true
    # Whenever 'event' context changes, create a different DAO wrapping the fields:
    parent: event
    rows:
      - name: cat_sep0
        format: "^$"
      - fields:
        - name: cat_title
          format: "^Categoria\\s([MU]\\s\\d{2,3})\\s+Tempo\\sBase:\\s"
          pop_out: false
        - name: base_time
          format: "\\s+Tempo\\sBase:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: world_record
          format: "\\|\\sMondiale:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: eu_record
          format: "\\|\\sEuropeo:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: ita_record
          format: "\\|\\sItaliano:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false

      - name: cat_hdr
        format: "Cl\\.\\sCodice\\s+Atleta\\s+Anno\\sSocietà\\s+Tempo\\s+P\\.Tab\\s+Reg\\."
      - name: cat_sep1
        format: "^$"

  # Actual data starts here:
  - name: results
    # Pages with relay results usually won't have individual results in it, so to pass any page check this context must be optional:
    required: false
    repeat: true
    parent: category
    rows:
      # "results" row-0:
      - fields:
        - name: rank
          format: "^(\\d{1,2}|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}"
          pop_out: false
          # DSQ don't have rank:
          required: false
        - name: badge_num
          format: "^(?>\\d{1,2}|nc|fg|fc)\\s{2,8}(\\d{3,9})\\s{1,4}(?>\\s?\\S{1,}){1,}\\s{1,}\\d{4}\\s"
          pop_out: false
        - name: swimmer_name
          format: "^(?>\\d{1,2}|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}((?>\\s?\\S{1,}){1,})\\s{1,}\\d{4}\\s"
          pop_out: false
        - name: year_of_birth
          format: "^(?>\\d{1,2}|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}(?>\\s?\\S{1,}){1,}\\s{1,}(\\d{4})\\s"
          pop_out: false

        - name: team_name
          format: "\\s{1,}\\d{4}\\s((?>\\s?\\S{1,}){1,})(?>\\s{1,}\\d{2}[':\\.]|\\s{1,}Squalificat|\\s{1,}Ritirat|\\s{1,}Arrivo)"
          pop_out: false
        - name: timing
          format: "\\s{1,}\\d{4}\\s.+\\s{1,}(\\d{2}[':\\.]?\\d{2}[\":\\.]\\d{2})\\s+(?>\\(?\\d{3,4},\\d{2}\\)?)?\\s{1,}\\w{3,}$"
          pop_out: false
          # DSQ don't have timings:
          required: false
        - name: std_score
          format: "\\s{2,}\\d{2}[':\\.]?\\d{2}[\":\\.]\\d{2}\\s+\\(?(\\d{3,4},\\d{2})\\)?\\s{1,}"
          pop_out: false
          # U25/A20/DSQ do not score:
          required: false
        - name: badge_region
          format: "\\s{1,}(\\w{3})$"
          # This may be rendered on the next row in case of DSQs:
          required: false
          pop_out: false
        - name: disqualify_type
          format: "\\s*(Arrivo\\sirr.+|Squal.+|Nuotata.+|Falsa.+)$"
          pop_out: false
          required: false

      - name: results_ext
        # This will make the row not to fail if missing at all
        required: false
        fields:
          - name: swimmer_suffix
            format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(\\w\\D{1,35})(?>\\s+|$)"
            token_end: 50
            pop_out: false
            required: false
          - name: team_suffix
            format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(?>\\w\\D{1,35}|\\s{2,35})\\s{2,}(.{2,30})$"
            token_end: 95
            pop_out: false
            required: false
          # XOR case (selected by spacing): DSQ label XOR badge region code:
          # (sometimes the DSQ label gets written on a second row and "moves" the badge region downward to the 3rd in formatting)
          - name: disqualify_type_alt
            format: "\\s{2,}(Falsa\\s\\w+|Arrivo\\s\\w+|Virata\\s\\w+|Nuotata\\s\\w+)$"
            # WARNING: for simplicity, the following doesn't work if both swimmer_suffix & team_suffix are present and will gobble up part of the team_suffix or the swimmer suffix
            #          (but the token start should take care of discriminating the case)
            # format: "\\s{1,}(.{2,25})(?<!\\s\\s\\w{3}|\\d{2}|\\d{2}\\))$"
            pop_out: false
            required: false
          # Sometimes this 3-char badge regional code will be nil in the main row above but will render in this one;
          # using a different field name will store the value without overwriting the value from the main row if this is nil:
          - name: badge_region_alt
            format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(?>(?>\\w\\D{1,35}|\\s)\\s{4,})(?>\\s?\\w{2,}){0,}\\s+((?!SSD|ASD|SNC|SRL)\\w{3})$|^\\s{45,}(?>\\s?\\w{2,}){0,}\\s{4,}((?!SSD|ASD|SNC|SRL)\\w{3})$|^\\s{80,}((?!SSD|ASD|SNC|SRL)\\w{3})$"
            pop_out: false
            required: false

      - name: results_ext2
        # This will make the row not to fail if missing at all
        required: false
        fields:
          - name: swimmer_suffix_alt
            format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(\\w\\D{1,35})(?>\\s+|$)"
            token_end: 50
            pop_out: false
            required: false
          - name: disqualify_type_alt
            format: "\\s{2,}(Falsa\\s\\w+|Arrivo\\s\\w+|Virata\\s\\w+)$"
            # token_start: 95
            # format: "\\s{1,}(.{2,25})(?<!\\s\\s\\w{3}|\\d{2}|\\d{2}\\))$"
            # XOR case (selected by spacing): DSQ label XOR badge region code:
            # (sometimes the DSQ label gets written on a second row and "moves" the badge region downward in formatting)
            # format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(?>(?>\\w\\D{1,35}|\\s)\\s{4,})(.*)(?<!\\s\\s\\w{3})$"
            pop_out: false
            required: false
          - name: badge_region_alt
            format: "^\\s{10,25}(?!\\s+\\d{2,4}\\s)(?>(?>\\w\\D{1,35}|\\s)\\s{4,})(?>\\s?\\w{2,}){0,}\\s+((?!SSD|ASD|SNC|SRL)\\w{3})$|^\\s{45,}(?>\\s?\\w{2,}){0,}\\s{4,}((?!SSD|ASD|SNC|SRL)\\w{3})$|^\\s{80,}((?!SSD|ASD|SNC|SRL)\\w{3})$"
            pop_out: false
            required: false

  # Sibling "results" row #1: (optional)
  - name: dsq_label
    parent: results
    required: false
    # Return the dsq_label as a string key (not as a field):
    format: "^\\s{80,}(.*)(?<!\\s\\s\\w{3})$"

  # Sibling "results" row #2: (optional)
  - name: results_lap250
    parent: results
    required: false
    fields:
      - name: lap50
        format: "\\s{2,}-50m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta50
        format: "\\s{2,}-50m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap100
        format: "\\s{2,}-100m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta100
        format: "\\s{2,}-100m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap150
        format: "\\s{2,}-150m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta150
        format: "\\s{2,}-150m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap200
        format: "\\s{2,}-200m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta200
        format: "\\s{2,}-200m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap250
        format: "\\s{2,}-250m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta250
        format: "\\s{2,}-250m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false

  # Sibling "results" row #3: (optional)
  - name: results_lap500
    parent: results
    required: false
    fields:
      - name: lap300
        format: "\\s{2,}-300m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta300
        format: "\\s{2,}-300m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap350
        format: "\\s{2,}-350m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta350
        format: "\\s{2,}-350m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap400
        format: "\\s{2,}-400m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta400
        format: "\\s{2,}-400m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap450
        format: "\\s{2,}-450m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta450
        format: "\\s{2,}-450m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap500
        format: "\\s{2,}-500m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta500
        format: "\\s{2,}-500m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false

  # Sibling "results" row #4: (optional)
  - name: results_lap750
    parent: results
    required: false
    fields:
      - name: lap550
        format: "\\s{2,}-550m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta550
        format: "\\s{2,}-550m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap600
        format: "\\s{2,}-600m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta600
        format: "\\s{2,}-600m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap650
        format: "\\s{2,}-650m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta650
        format: "\\s{2,}-650m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap700
        format: "\\s{2,}-700m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta700
        format: "\\s{2,}-700m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false
      - name: lap750
        format: "\\s{2,}-750m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta750
        format: "\\s{2,}-750m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false

  # Sibling "results" row #5: (optional)
  - name: results_lap800
    parent: results
    required: false
    fields:
      - name: lap800
        format: "\\s{2,}-800m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
        pop_out: false
        required: false
      - name: delta800
        format: "\\s{2,}-800m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
        pop_out: false
        required: false

  - name: rel_category
    # Each context that isn't repeated at least once *on each page* with this format should be set as optional:
    required: false
    repeat: true
    parent: event
    rows:
      - name: cat_sep0
        format: "^$"
      - fields:
        - name: cat_title
          format: "^Categoria\\s(\\d{2,3}\\s?-\\s?\\d{2,3})\\s{1,}\\(\\D{1,2}\\)\\s+Tempo\\sBase:\\s"
          pop_out: false
        - name: base_time
          format: "\\s+Tempo\\sBase:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: world_record
          format: "\\|\\sMondiale:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: eu_record
          format: "\\|\\sEuropeo:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false
        - name: ita_record
          format: "\\|\\sItaliano:\\s(\\d{1,2}[':\\.]?\\d{1,2}[\":\\.]\\d{1,2})\\|\\s"
          required: false
          pop_out: false

      - name: cat_hdr
        format: "Cl\\.\\sCodice\\s+Atleta\\s+Anno\\sSocietà\\s+Tempo\\s+P\\.Tab\\s+Reg\\."
      - name: cat_sep1
        format: "^$"

  - name: rel_team
    parent: rel_category
    # Pages with individual results won't usually have relay results in it, so to pass any page check this context must be optional:
    required: false
    repeat: true
    rows:
      - fields:
        - name: rank
          format: "^(\\d{1,2}\\)?|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}\\S"
          pop_out: false
          # DSQ don't have rank:
          required: false
        - name: badge_num
          format: "^(?>\\d{1,2}\\)?|nc|fg|fc)\\s{2,8}(\\d{3,9})\\s{1,4}(?>\\s?\\S{1,}){1,}\\s{4,}"
          pop_out: false
        - name: team_name
          format: "^(?>\\d{1,2}\\)?|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}((?>\\s?\\S{1,}){1,})\\s{4,}"
          pop_out: false
        - name: timing
          format: "^(?>\\d{1,2}\\)?|nc|fg|fc)\\s{2,8}\\d{3,9}\\s{1,4}(?>\\s?\\S{1,}){1,}\\s{4,}(\\d{2}[':\\.]?\\d{2}[\":\\.]\\d{2})\\s*"
          pop_out: false
          # DSQ don't have timings:
          required: false
        - name: std_score
          format: "\\s{2,}\\d{2}[':\\.]?\\d{2}[\":\\.]\\d{2}\\s+(\\d{3,4},\\d{2})\\s{1,}"
          pop_out: false
          # U25/A20/DSQ do not score:
          required: false
        - name: badge_region
          format: "\\s{1,}(\\w{3})(?>\\s{1,}IT)?$"
          # This may be rendered on the next row in case of DSQs:
          required: false
          pop_out: false
        - name: disqualify_type
          format: "\\s*(Arrivo\\sirr.+|Squal.+|Nuotata.+|Falsa.+)$"
          pop_out: false
          required: false

      # Optional relay row for when team name gets formatted on two lines:
      - name: rel_team_ext
        required: false
        fields:
          - name: team_suffix
            format: "^\\s{15,}((?>\\s?\\S{1,}){1,})$"
            pop_out: false
            required: false

      - name: rel_swimmers
        fields:
          - name: swimmer_name1
            format: "^\\s{2,}([A-z\\sìàèéòù'\\.-]{3,35})(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
          - name: delta50
            format: "^\\s{2,}[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
            required: false
          - name: swimmer_name2
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s)([A-z\\sìàèéòù'\\.-]{3,35})(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
            required: false
          - name: delta100
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s)[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
            required: false
          - name: swimmer_name3
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s){2}([A-z\\sìàèéòù'\\.-]{3,35})(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
            required: false
          - name: delta150
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s){2}[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s"
            pop_out: false
            required: false
          - name: swimmer_name4
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s){3}([A-z\\sìàèéòù'\\.-]{3,35})(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?$"
            pop_out: false
            required: false
          - name: delta200
            format: "^\\s{2,}(?>[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((?>\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?\\s\\-\\s){3}[A-z\\sìàèéòù'\\.-]{3,35}(?>\\s\\((\\d{2}[\\s\\.]\\d{2}[\\s\\.]\\d{2}|Squal\\.)\\))?$"
            pop_out: false
            required: false

      # Sibling relay row for laps (optional):
      - name: rel_laps
        required: false
        fields:
          - name: lap50
            format: "\\s{2,}-50m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
            pop_out: false
            required: false
          - name: delta50
            format: "\\s{2,}-50m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
            pop_out: false
            required: false
          - name: lap100
            format: "\\s{2,}-100m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
            pop_out: false
            required: false
          - name: delta100
            format: "\\s{2,}-100m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
            pop_out: false
            required: false
          - name: lap150
            format: "\\s{2,}-150m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
            pop_out: false
            required: false
          - name: delta150
            format: "\\s{2,}-150m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
            pop_out: false
            required: false
          - name: lap200
            format: "\\s{2,}-200m(\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2})[\\s\\(]"
            pop_out: false
            required: false
          - name: delta200
            format: "\\s{2,}-200m\\d{2}[':\\.]\\d{2}[\":\\.]\\d{2}[\\s\\(](\\d{0,2}[':\\.]?\\d{2}[\":\\.,]\\d{2})\\)?"
            pop_out: false
            required: false
