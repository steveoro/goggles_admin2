#
# = Layout format definition for PdfResults::FormatParser
#
# Bi-lingual format mostly for Trentino Alto-Adige, Bolzano, ...
# Supports 50 .. 1500m events with laps, no relays.
#
7-bolzano:
  - name: header
    # Index is page-relative:
    at_fixed_row: 0
    # Repeat (at_fixed_row, each page)
    repeat: true
    rows:
      - fields:
        - name: pool_type
          format: "^\\s{50,}Vasca\\/Bahn:\\s{1,}(\\d{2})."
        - name: meeting_date
          format: "\\s{1,}Data\\/Datum\\s{1,}(\\d{2}[\\.\\/\\-]\\d{2}[\\.\\/\\-]\\d{4})"

      - fields:
        - name: edition
          required: false
          format: "^\\s{0,}(\\d{1,2})[°^]?\\s(?>\\w+\\s?){1,8}\\s{5,}Cronometraggio"
          pop_out: false
        - name: meeting_name
          format: "^\\s{0,}(?>\\d{1,2}[°^]?)?\\s((?>\\w+\\s?){1,8})\\s{5,}Cronometraggio"
          pop_out: false
        - name: chrono_type
          format: "\\s{15,}Cronometraggio\\/Zeitnahme:\\s{1,}(auto|man|semi)"
          pop_out: false

      - name: hdr_sep1
        format: "^$"
      - name: hdr_sep2
        format: "^$"

  - name: event
    repeat: true
    # Section is printed out only on event change and may be skipped for the whole page:
    required: false
    parent: header
    rows:
      - fields:
        - name: event_length
          pop_out: false
          format: "^\\s{0,}(\\d{2,4})\\sm\\s(?>Kraul|Schmetterling|Rücken|Brust|Lagen)\\s"
        - name: event_type
          pop_out: false
          format: "^\\s{0,}\\d{2,4}\\sm\\s(?>Kraul|Schmetterling|Rücken|Brust|Lagen)\\s\\/\\s(stile\\slibero|farfalla|dorso|rana|misti)\\s"
        - name: gender_type
          pop_out: false
          format: "\\s(?>weiblich|männlich)\\s\\/\\s(maschile|femminile)"

  - name: category
    repeat: true
    parent: event
    fields:
      - name: cat_title
        format: "^\\s{0,5}([UM]\\d{2})\\s{20,}tempo\\s"

  - name: results
    repeat: true
    parent: category
    rows:
      - fields:
        - name: rank
          format: "^\\s{0,3}(\\d{1,3})\\s\\.\\s"
          pop_out: false
        - name: swimmer_name
          format: "^\\s{0,3}\\d{1,3}\\s\\.\\s(\\D{3,40})\\s{1,}\\d{4}\\s{1,5}[a-zA-Z]{3}\\s{1,5}"
          pop_out: false
        - name: year_of_birth
          format: "^\\s{0,3}\\d{1,3}\\s\\.\\s\\D{3,40}\\s{1,}(\\d{4})\\s{1,5}[a-zA-Z]{3}\\s{1,5}"
          pop_out: false
        - name: nation
          format: "^\\s{0,3}\\d{1,3}\\s\\.\\s\\D{3,40}\\s{1,}\\d{4}\\s{1,5}([a-zA-Z]{3})\\s{1,5}"
          pop_out: false
        - name: team_name
          format: "^\\s{0,3}\\d{1,3}\\s\\.\\s\\D{3,40}\\s{1,}\\d{4}\\s{1,5}[a-zA-Z]{3}\\s{1,5}(.{3,29})\\s{1,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s{1,}"
          pop_out: false
        - name: timing
          # DSQ don't have *valid* timings ("99.99,99") so we ignore them:
          format: "\\s{1,}((?!99\\.99,99)\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s{5,}[AMS]$"
          pop_out: false
          required: false
        - name: disqualify_type
          format: "\\s{1,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s{3,}(DNS|\\w{3,})\\s{3,}[AMS]$"
          pop_out: false
          required: false

      - name: results_lap50_hdr
        # required: true (default: always present, either as specified format or as an empty line.)
        # Consume an empty line instead of this row if it's not found:
        # This will match any empty row if the fields are not found (provided the "fields" section is defined as below)
        optional_if_empty: true
        fields:
          - name: lap50_hdr
            format: "^\\s{5,}50\\sm\\s*"
      - name: results_lap50
        # required: true (default: always present, either as specified format or as an empty line.)
        # Consume an empty line instead of this row if it's not found:
        # This will match any empty row if the fields are not found (provided the "fields" section is defined as below)
        optional_if_empty: true
        fields:
          - name: lap50
            format: "^\\s{5,}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
          - name: lap100
            format: "^\\s{5,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap150
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){2}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap200
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){3}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap250
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){4}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap300
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){5}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap350
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){6}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap400
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){7}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false

  # Additional (optional) 2x rows for longer results (> 400m, 1x header + 1x lap timings):
  - name: results_lap450
    repeat: true
    required: false
    parent: results
    # Each sub-row must contain at least the first lap timing to be considered "consumable":
    rows:
      - name: results_lap450_hdr
        format: "^\\s{5,}450\\sm\\s*"
      - name: results_lap450
        fields:
          - name: lap450
            format: "^\\s{5,}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
          - name: lap500
            format: "^\\s{5,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap550
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){2}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap600
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){3}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap650
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){4}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap700
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){5}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap750
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){6}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap800
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){7}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false

  # Additional (optional) 2x rows for longer results (> 800m, 1x header + 1x lap timings):
  - name: results_lap850
    repeat: true
    required: false
    parent: results
    # Each sub-row must contain at least the first lap timing to be considered "consumable":
    rows:
      - name: results_lap850_hdr
        format: "^\\s{5,}850\\sm\\s*"
      - name: results_lap850
        required: false
        fields:
          - name: lap850
            format: "^\\s{5,}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
          - name: lap900
            format: "^\\s{5,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap950
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){2}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1000
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){3}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1050
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){4}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1100
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){5}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1150
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){6}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1200
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){7}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false

  # Additional (optional) 2x rows for longer results (> 1200m, 1x header + 1x lap timings):
  - name: results_lap1250
    repeat: true
    required: false
    parent: results
    # Each sub-row must contain at least the first lap timing to be considered "consumable":
    rows:
      - name: results_lap1250_hdr
        format: "^\\s{5,}1250\\sm\\s*"
      - name: results_lap1250
        required: false
        fields:
          - name: lap1250
            format: "^\\s{5,}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
          - name: lap1300
            format: "^\\s{5,}\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1350
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){2}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1400
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){3}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false
          - name: lap1450
            format: "^\\s{5,}(?>\\d{2}[.:\\']\\d{2}[.,]\\d{2}\\s+){4}(\\d{2}[.:\\']\\d{2}[.,]\\d{2})\\s*"
            pop_out: false
            required: false

  # End-Of-Page context
  - name: footer
    parent: header
    eop: true
    row_span: 5
    repeat: true
    rows:
      - name: footer_spacer1
        required: false
        format: "^$"

      - name: footer_min_size
        row_span: 4
        fields:
          # Actual last-line context marker (page should end after this token)
          - name: page_delimiter
            # Using a custom non-existent field name in keys array to skip completely this row
            # from being part of the resulting context key:
            keys: [skip_me]
            format: "\\s+SEITE\\s[-–]\\sPAGINA\\s\\d{1,2}\\s"
