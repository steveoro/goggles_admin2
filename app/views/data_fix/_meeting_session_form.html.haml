= form_for(meeting_session, url: data_fix_update_path(meeting_session, model: 'meeting_session'),
           method: :patch) do |f|
  = hidden_field_tag('key', index)
  = hidden_field_tag('file_path', file_path)
  .container
    .row
      .col-auto
        .form-group
          .field
            = label_tag("meeting_session[#{index}][description]", 'description')
            = text_field_tag("meeting_session[#{index}][description]", meeting_session&.description, required: true,
                             class: 'form-control', placeholder: 'session description')
      .col-auto
        .form-group
          .field
            = label_tag("meeting_session[#{index}][session_order]", 'session_order')
            = number_field_tag("meeting_session[#{index}][session_order]", meeting_session&.session_order,
                               required: true, class: 'form-control', placeholder: 'order')
      .col-auto
        .form-group
          .field
            = label_tag("meeting_session[#{index}][scheduled_date]", 'scheduled_date')
            - if meeting_session.scheduled_date.blank?
              %span
                %i.fa.fa-exclamation.text-danger
            = date_field_tag("meeting_session[#{index}][scheduled_date]", meeting_session&.scheduled_date,
                             required: true, class: 'form-control')
      .col-auto
        .form-group
          .field
            - day_part_type_opts = options_from_collection_for_select(GogglesDb::DayPartType.all, 'id', 'long_label',
                                                                      meeting_session&.day_part_type_id)
            = label_tag("meeting_session[#{index}][day_part_type_id]", 'day_part_type')
            = select_tag("meeting_session[#{index}][day_part_type_id]", day_part_type_opts, class: 'form-control')

    .row-fluid
      .field
        = f.label("swimming_pool[#{index}][swimming_pool_id]", 'swimming_pool')
      -# TODO: REFACTOR into Import::OriginalTextLabel
      .bg-light-grey
        %small
          %i.form-text.text-muted
            %pre
              - ordinal = index + 1
              ðŸ”‘ #{data_hash["venue#{ordinal}"]} (#{data_hash['poolLength']} m.)
              &nbsp; / &nbsp;
              = data_hash["address#{ordinal}"]

    .row
      .col-lg-10.col-md-9.col-sm-6.my-1
        = render(AutoCompleteComponent.new(base_dom_id: "swimming_pool[#{index}]",
                base_api_url: api_url,
                default_value: meeting_session.swimming_pool_id || swimming_pool.id,
                detail_endpoint: 'swimming_pool', base_name: 'swimming_pool', label_column: 'nick_name',
                search_endpoint: 'swimming_pools', search_column: 'name',
                target2_field: 'nick_name', target2_column: 'nick_name',
                target3_dom_id: "swimming_pool_#{index}_pool_type_id", target3_column: 'pool_type_id',
                target4_dom_id: "city_#{index}_city_id", target4_column: 'city_id',
                jwt: current_user.jwt))
      .offset-lg-0.offset-md-0.offset-sm-1.col-lg-2.col-md-3.col-sm-4.mt-2
        = select_tag("swimming_pool[#{index}][pool_type_id]", pool_type_opts, class: 'form-control',
                      data: { 'autocomplete-target' => 'field2' })
      .col-12.my-1
        = render(AutoCompleteComponent.new(base_dom_id: "city[#{index}]",
                base_api_url: api_url,
                default_value: swimming_pool.city_id,
                detail_endpoint: 'city', base_name: 'city', label_column: 'area',
                search_endpoint: 'cities', search_column: 'name',
                target2_field: 'area', target2_column: 'area',
                target3_field: 'country_code', target3_column: 'country_code',
                jwt: current_user.jwt))

    .form-group
      = f.submit(t('data_import.generic_save_btn'), id: 'btn-save-session', class: 'btn btn-primary',
                 'aria-label': 'Save', type: 'submit',
                 data: { confirm: t('data_import.btn_save_confirm') })
