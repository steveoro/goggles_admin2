:ruby
  # "Subkey" is the actual swimmer key (with spaces) translated to a node name to a node ID (with underscores)
  # (it's needed to reference the DOM IDs from the AutoCompleteComponent)
  subkey_for_dom_id = swimmer_key.gsub(/[\s`'^?&%$!"<>:;,.*àèéìòù]/, '_')
  src_dom = "#swimmer_#{subkey_for_dom_id}_id"
  target_dom = "#swimmer_#{subkey_for_dom_id}_swimmer_id"
  onchange_event = "$('#{target_dom}').val($('#{src_dom}').val()); $('#{target_dom}').trigger('change')"
  gender_type_opts = options_from_collection_for_select(GogglesDb::GenderType.all, 'id', 'label',
                                                        swimmer&.gender_type_id)

= form_for(swimmer, url: data_fix_update_path(swimmer, model: 'swimmer'), method: :patch) do |f|
  = hidden_field_tag('key', swimmer_key) # actual entity key, used to retrieve the entity from data hash
  = hidden_field_tag('dom_valid_key', subkey_for_dom_id) # valid DOM ID key using inside the form
  = hidden_field_tag('file_path', file_path)
  .container
    .form-group
      .field
        = label_tag("swimmer[#{subkey_for_dom_id}][id]", 'fuzzy matches')
        / ORIG.: (Needs updated SwimmerDecorator [DB] handling nil for gender_type)
        -# = select_tag("swimmer[#{subkey_for_dom_id}][id]", options_from_collection_for_select(swimmer_matches || [],
        -#              'id', 'display_label', swimmer&.id), include_blank: true, class: 'form-control',
        -#              onchange: onchange_event)
        - select_options_for_swimmer = (swimmer_matches || []).map { |sw| [sw.id, "#{sw.complete_name} (#{sw.gender_type&.label}, #{sw.year_of_birth}#{sw.year_guessed ? '~' : ''})"] }
        = select_tag("swimmer[#{subkey_for_dom_id}][id]", options_for_select(select_options_for_swimmer), include_blank: true, class: 'form-control',
                     onchange: onchange_event)
    .row
      .col-auto
        = render(AutoCompleteComponent.new(show_top_labels: true,
                base_dom_id: "swimmer[#{subkey_for_dom_id}]", base_api_url: api_url,
                default_value: swimmer&.id,
                detail_endpoint: 'swimmer', base_name: 'swimmer', label_column: 'complete_name',
                search_endpoint: 'swimmers', search_column: 'complete_name',
                search2_dom_id: "swimmer_#{subkey_for_dom_id}_year_of_birth", search2_column: 'year_of_birth',
                target3_dom_id: "swimmer_#{subkey_for_dom_id}_gender_type_id", target3_column: 'gender_type_id',
                target4_dom_id: "swimmer_#{subkey_for_dom_id}_last_name", target4_column: 'last_name',
                target5_dom_id: "swimmer_#{subkey_for_dom_id}_first_name", target5_column: 'first_name',
                target6_dom_id: "swimmer_#{subkey_for_dom_id}_complete_name", target6_column: 'complete_name',
                jwt: current_user.jwt))
      .col-lg-3.col-md-5.col-sm-6.my-1
        .form-group
          .field
            = label_tag("swimmer[#{subkey_for_dom_id}][last_name]", 'last_name')
            = text_field_tag("swimmer[#{subkey_for_dom_id}][last_name]", swimmer&.last_name&.upcase,
                              class: 'form-control', required: true, placeholder: 'last_name')
      .col-lg-3.col-md-5.col-sm-6.my-1
        .form-group
          .field
            = label_tag("swimmer[#{subkey_for_dom_id}][first_name]", 'first_name')
            = text_field_tag("swimmer[#{subkey_for_dom_id}][first_name]", swimmer&.first_name&.upcase,
                              class: 'form-control', required: true, placeholder: 'first_name')

      .col-lg-6.col-md-6.my-2
        .form-group
          .field
            = label_tag("swimmer[#{subkey_for_dom_id}][complete_name]", 'complete_name')
            = text_field_tag("swimmer[#{subkey_for_dom_id}][complete_name]", swimmer&.complete_name&.upcase,
                              class: 'form-control', required: true, placeholder: 'complete_name')
      .col-lg-2.col-md-3.col-sm-4.my-2
        = label_tag("swimmer[#{subkey_for_dom_id}][year_of_birth]", 'year_of_birth')
        = number_field_tag("swimmer[#{subkey_for_dom_id}][year_of_birth]", swimmer&.year_of_birth, min: 1910,
                            max: Time.zone.today.year, required: true, autofocus: true, class: 'form-control')
      .col-lg-2.col-md-3.col-sm-4.my-2
        = label_tag("swimmer[#{subkey_for_dom_id}][gender_type_id]", 'gender_type')
        = select_tag("swimmer[#{subkey_for_dom_id}][gender_type_id]", gender_type_opts, class: 'form-control')

    .form-group
      = f.submit(t('data_import.generic_save_btn'), id: 'btn-save-session', class: 'btn btn-primary',
                 'aria-label': 'Save', type: 'submit',
                 data: { confirm: t('data_import.btn_save_confirm') })
