-# frozen_string_literal: true

.container
  %h2 Data-Fix V2 • Step 5: Results (Phase 5)

  .mb-2
    = render(partial: 'data_fix/step_tabs', locals: { active_step: 5, file_path: @file_path })

  .d-flex.justify-content-between.mb-2
    %div
      = link_to 'Use legacy (Step 5)', review_results_path(request.query_parameters.except(:phase5_v2)), class: 'btn btn-secondary'

  .card.mb-3
    .card-header Phase Metadata
    .card-body
      %pre= JSON.pretty_generate(@phase5_meta || {})

  - sessions = Array(@phase5_data['sessions'])
  - if sessions.empty?
    %em No results found in Phase 5.
  - else
    - sessions.sort_by { |s| s['session_order'].to_i }.each do |s|
      .card.mb-3
        .card-header
          Session
          = s['session_order']
        .card-body
          - events = Array(s['events']).sort_by { |e| e['event_order'].to_i }
          - if events.empty?
            %em No events for this session.
          - else
            - events.each do |e|
              .mb-3.border.rounded
                .p-2.bg-light.d-flex.justify-content-between.align-items-center
                  %div
                    %strong= e['key']
                    &nbsp;•&nbsp;
                    %span
                      = e['distance']
                      = "/"
                      = e['stroke']
                  %span.badge.badge-info
                    Total:
                    = e['results_count']
                - genders = Array(e['genders']).sort_by { |g| g['gender'].to_s }
                - if genders.empty?
                  .p-2
                    %em No gender details available.
                - else
                  - genders.each do |g|
                    .card.mb-2
                      .card-header.d-flex.justify-content-between.align-items-center
                        %div
                          %strong Gender:
                          = g['gender']
                        %span.badge.badge-secondary
                          Total:
                          = g['results_count']
                      .card-body
                        - categories = Array(g['categories']).sort_by { |c| c['category'].to_s }
                        - if categories.empty?
                          %em No categories.
                        - else
                          .row
                            - categories.each do |c|
                              - cid = "cat-#{e['key']}-#{g['gender']}-#{c['category']}".parameterize
                              .col-12.col-md-6.col-lg-4.mb-2
                                .card{ id: cid }
                                  .card-body.py-2.d-flex.justify-content-between.align-items-center
                                    %div
                                      %code= c['category']
                                      &nbsp;&mdash;&nbsp;
                                      %span
                                        = c['results_count']
                                        results
                                    %button.btn.btn-sm.btn-outline-primary.load-category{ data: { url: results_chunk_v2_path(file_path: @file_path, event_key: e['key'], gender: g['gender'], category: c['category']), target: cid } }
                                      Load results

:javascript
  document.addEventListener('click', function(e) {
    const btn = e.target.closest('.load-category');
    if (!btn) return;
    e.preventDefault();
    const url = btn.getAttribute('data-url');
    const targetId = btn.getAttribute('data-target');
    const card = document.getElementById(targetId);
    if (!url || !card) return;
    btn.disabled = true;
    btn.textContent = 'Loading...';
    fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' }})
      .then(resp => resp.text())
      .then(html => {
        card.outerHTML = html;
      })
      .catch(() => {
        btn.disabled = false;
        btn.textContent = 'Load results';
        alert('Failed to load results.');
      });
  });
