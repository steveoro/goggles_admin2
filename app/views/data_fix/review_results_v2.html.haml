-# frozen_string_literal: true

.container-fluid
  %h2 Data-Fix V2 â€¢ Step 5: Results (Phase 5)

  .mb-2
    = render(partial: 'data_fix/step_tabs', locals: { active_step: 5, file_path: @file_path })

  .d-flex.justify-content-between.mb-2
    %div
      = link_to 'Use legacy (Step 5)', review_results_path(request.query_parameters.except(:phase5_v2)), class: 'btn btn-secondary'

  = render(partial: 'data_fix/phase_metadata', locals: { phase_number: 5, metadata: @phase5_meta })

  - if @populate_stats
    .alert.alert-info.mb-3
      %strong Populated:
      = @populate_stats[:mir_created]
      results,
      = @populate_stats[:laps_created]
      laps
      - if @populate_stats[:errors].any?
        %span.text-danger
          (#{@populate_stats[:errors].size} errors)

  - if @all_results.blank?
    .alert.alert-warning
      %p No results loaded from database yet.
      %p
        = link_to 'Populate DB Tables', review_results_path(file_path: @file_path, phase5_v2: 1, populate_db: 1), class: 'btn btn-primary'
  - else
    .mb-3.d-flex.justify-content-between.align-items-center
      %div
        %strong Total results in DB:
        = @all_results.size
      %small.text-muted
        Displaying up to 1000 results

    - # Group results by import_key prefix (session-event-category-gender)
    - grouped = @all_results.group_by do |mir|
      - parts = mir.import_key.split('/')
      - parts[0] # program_key: "1-200RA-M75-F"

    - # Responsive grid: 2 columns on large displays
    .row
      - grouped.keys.sort.each_with_index do |program_key, idx|
        - results = grouped[program_key]
        .col-12.col-lg-6
          = render partial: 'data_fix/result_program_card', locals: { program_key: program_key, results: results, swimmers_by_id: @swimmers_by_id, teams_by_id: @teams_by_id, laps_by_parent_key: @laps_by_parent_key, card_index: idx }
