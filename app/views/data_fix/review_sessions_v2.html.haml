-# frozen_string_literal: true

.container-fluid
  %h2 Data-Fix V2 â€¢ Step 1: Meeting & Sessions (Phase 1)
  .mb-2
    = render(partial: 'data_fix/step_tabs', locals: { active_step: 1, file_path: @file_path })

  -# Phase Navigation buttons
  .d-flex.justify-content-between.my-2
    %div
      = link_to 'Use legacy (Step 1)', review_sessions_path(request.query_parameters.except(:phase_v2)), class: 'btn btn-secondary'
    %div
      = link_to 'Proceed to Step 2 (Teams)', review_teams_path(request.query_parameters.merge(phase2_v2: 1)), class: 'btn btn-primary'
  :ruby
    meeting_id = @phase1_data['id']
    meeting_name = @phase1_data['name']
    extra_info = [meeting_id, meeting_name].compact.join(': ').presence
  = render(partial: 'data_fix/phase_metadata', locals: { phase_number: 1, metadata: @phase1_meta, extra_info: extra_info })

  -# Meeting card with consistent styling
  :ruby
    has_match = meeting_id.present?
    card_bg = has_match ? 'bg-light' : 'bg-light-yellow'
    border_color = has_match ? 'border-secondary' : 'border-warning'
    border_width = 'border-2'
  = render(partial: 'meeting_form_card',
           locals: { file_path: @file_path, api_url: @api_url, meeting_data: @phase1_data,
                     meeting_id:, has_match:, card_bg:, border_color:, border_width: })

  -# Sessions Section Header
  .card.mb-2
    .card-header
      %strong Sessions (Meeting Sessions, Pools & Cities)
    .card-body.py-2
      .d-flex.justify-content-between.align-items-center
        %div
          %strong Total Sessions:
          - sessions = @phase1_data['meeting_session'] || []
          = sessions.size
        %div
          = form_tag(data_fix_add_session_path, method: :post, class: 'd-inline') do
            = hidden_field_tag :file_path, @file_path
            %button.btn.btn-sm.btn-success{ type: 'submit', data: { confirm: 'Add a new session?' } }
              %i.fa.fa-plus
              Add Session

  -# Sessions as collapsible cards
  - if sessions.empty?
    .alert.alert-info
      %em No sessions yet. Click "Add Session" above or use the legacy view.
  - else
    - new_session_idx = params[:new_session_index]&.to_i
    - sessions.each_with_index do |sess_hash, idx|
      :ruby
        is_new_session = new_session_idx.present? && new_session_idx == idx
        session_id = sess_hash['id']
        has_match = session_id.present?
        card_bg = has_match ? 'bg-light' : 'bg-light-yellow'
        border_color = has_match ? 'border-secondary' : 'border-warning'
        border_width = 'border-2'

      = render(partial: 'session_form_card',
               locals: { file_path: @file_path, api_url: @api_url, sess_hash:, idx:,
                         is_new_session:, session_id:, has_match:, card_bg:, border_color:, border_width:,
                         existing_meeting_sessions: @existing_meeting_sessions })
