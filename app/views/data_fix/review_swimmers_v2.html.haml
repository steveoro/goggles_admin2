-# frozen_string_literal: true

.container
  %h2 Data-Fix V2 • Step 3: Swimmers (Phase 3)

  .mb-2
    = render(partial: 'data_fix/step_tabs', locals: { active_step: 3, file_path: @file_path })

  .card.mb-3
    .card-header Phase Metadata
    .card-body
      %pre= JSON.pretty_generate(@phase3_meta || {})

  .d-flex.justify-content-between.mb-2
    %div
      = link_to 'Use legacy (Step 3)', review_swimmers_path(request.query_parameters.except(:phase3_v2)), class: 'btn btn-secondary'
    %div
      = link_to 'Proceed to Step 4 (Events)', review_events_path(request.query_parameters), class: 'btn btn-primary'

  .card.mb-3
    .card-header Swimmers
    .card-body
      .mb-2
        = form_tag(review_swimmers_path, method: :get, class: 'form-inline') do
          = hidden_field_tag :file_path, @file_path
          = hidden_field_tag :phase3_v2, 1
          .form-group.mr-2
            %label.mr-1{ for: 'q' } Filter
            = text_field_tag :q, @q, class: 'form-control form-control-sm', placeholder: 'Search swimmers...'
          .form-group.mr-2
            %label.mr-1{ for: 'per_page' } Per page
            = select_tag :per_page, options_for_select([25,50,100,200], @per_page), class: 'form-control form-control-sm'
          = submit_tag 'Apply', class: 'btn btn-sm btn-primary mr-1'
          = link_to 'Clear', review_swimmers_path(file_path: @file_path, phase3_v2: 1), class: 'btn btn-sm btn-light'
      - swimmers = @phase3_data['swimmers'] || []
      - if swimmers.empty?
        %em No swimmers found. If the source is LT2 without swimmer details, switch to legacy to proceed or enrich the phase data.
      - else
        .d-flex.justify-content-between.align-items-center.mb-2
          %div
            %strong Page:
            = @page
            = "/"
            = @total_pages
            &nbsp;•&nbsp;
            %strong Total rows:
            = @total_count
          %div
            - prev_page = @page > 1 ? @page - 1 : nil
            - next_page = (@page * @per_page) < @total_count ? @page + 1 : nil
            - base_params = request.query_parameters.merge(phase3_v2: 1, per_page: @per_page)
            - if prev_page
              = link_to 'Prev', review_swimmers_path(base_params.merge(page: prev_page)), class: 'btn btn-sm btn-outline-secondary'
            - if next_page
              = link_to 'Next', review_swimmers_path(base_params.merge(page: next_page)), class: 'btn btn-sm btn-outline-secondary ml-1'
        %table.table.table-sm.table-striped
          %thead
            %tr
              %th #
              %th Key
              %th Last
              %th First
              %th YOB
              %th Gender
          %tbody
            - @items.each_with_index do |s, idx|
              %tr
                %td= ((@page - 1) * @per_page) + idx + 1
                %td= s['key']
                %td= s['last_name']
                %td= s['first_name']
                %td= s['year_of_birth']
                %td= s['gender_type_code']
        .d-flex.justify-content-end
          - if prev_page
            = link_to 'Prev', review_swimmers_path(base_params.merge(page: prev_page)), class: 'btn btn-sm btn-outline-secondary'
          - if next_page
            = link_to 'Next', review_swimmers_path(base_params.merge(page: next_page)), class: 'btn btn-sm btn-outline-secondary ml-1'

  .card
    .card-header Badges (inferred)
    .card-body
      - badges = @phase3_data['badges'] || []
      - if badges.empty?
        %em No badges present.
      - else
        %table.table.table-sm.table-striped
          %thead
            %tr
              %th Swimmer Key
              %th Team Key
              %th Season
          %tbody
            - badges.first(200).each do |b|
              %tr
                %td= b['swimmer_key']
                %td= b['team_key']
                %td= b['season_id']
        - if badges.size > 200
          %small.text-muted Showing first 200 badges only.
