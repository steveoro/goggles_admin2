-# frozen_string_literal: true

.container-fluid
  %h2 Data-Fix V2 • Step 2: Teams (Phase 2)
  .mb-2
    = render(partial: 'data_fix/step_tabs', locals: { active_step: 2, file_path: @file_path })

  -# Phase Navigation buttons
  .d-flex.justify-content-between.my-2
    %div
      = link_to 'Use legacy (Step 2)', review_teams_path(request.query_parameters.except(:phase2_v2)), class: 'btn btn-secondary'
    %div
      = link_to 'Proceed to Step 3 (Swimmers)', review_swimmers_path(request.query_parameters.merge(phase3_v2: 1)), class: 'btn btn-primary'

  -# Phase Metadata card
  = render(partial: 'data_fix/phase_metadata', locals: { phase_number: 2, metadata: @phase2_meta })

  -# Search and filter controls
  .card.my-2
    .card-header
      = form_tag(review_teams_path, method: :get, class: 'form-inline') do
        = hidden_field_tag :file_path, @file_path
        = hidden_field_tag :phase2_v2, 1
        .form-group.mr-2
          %label.mr-1{ for: 'q' } Filter
          = text_field_tag :q, @q, class: 'form-control form-control-sm', placeholder: 'Search teams...'
        .form-group.mr-2
          %label.mr-1{ for: 'teams_per_page' } Per page
          = select_tag :teams_per_page, options_for_select([50, 100, 150], @per_page), class: 'form-control form-control-sm'
        = submit_tag 'Apply', class: 'btn btn-sm btn-primary mr-1'
        = link_to 'Clear', review_teams_path(file_path: @file_path, phase2_v2: 1), class: 'btn btn-sm btn-light'
    .card-body.py-0
      -# Pagination controls (top) and Add button
      .d-flex.justify-content-between.align-items-center
        %div
          %strong Page:
          = @page
          = "/"
          = @total_pages
          &nbsp;•&nbsp;
          %strong Rows:
          = @row_range
          = "/"
          = @total_count
        .flex-grow-1.pt-3
          - if @items.present?
            = render(PageLinksForArrayComponent.new(data: @items, total_count: @total_count, page: @page,
                                                    per_page: @per_page, param_name: :teams_page))
        %div
          = form_tag(data_fix_add_team_path, method: :post, class: 'd-inline', onsubmit: "return confirm('Add a new blank team?');") do
            = hidden_field_tag :file_path, @file_path
            %button.btn.btn-sm.btn-success{ type: 'submit' }
              %i.fa.fa-plus
              Add Team

  -# Collapsible card layout for each team
  - if @items.empty?
    .alert.alert-info
      %em No teams found. Adjust filters or rescan to rebuild phase2 file.
  - else
    - @items.each_with_index do |team_hash, idx|
      :ruby
        team_index = ((@page - 1) * @per_page) + idx
        team_key = team_hash['key'] || team_hash['name']
        team_name = team_hash['name'] || team_key
        editable_name = team_hash['editable_name'] || team_name
        team_id = team_hash['team_id']
        city_id = team_hash['city_id']
        name_variations = team_hash['name_variations']
        # Visual indicators
        has_match = team_id.present?
        card_bg = has_match ? 'bg-light' : 'bg-light-yellow'
        border_color = has_match ? 'border-secondary' : 'border-warning'
        border_width = 'border-2'

      = render(partial: 'team_form_card',
               locals: { file_path: @file_path, api_url: @api_url, team_hash:, team_index:,
                         team_key:, team_name:, editable_name:, team_id:, city_id:,
                         name_variations:, has_match:, card_bg:, border_color:, border_width: })

  -# Pagination controls (bottom)
  .mt-3
    - if @items.present?
      = render(PageLinksForArrayComponent.new(data: @items, total_count: @total_count, page: @page,
                                              per_page: @per_page, param_name: :teams_page))
